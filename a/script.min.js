
var actions=[];function ActionInfo(){this.id=0;this.name="";this.reward=[];}
ActionInfo.prototype.process=function(){addDataLinks(this.reward);}
function getActionFromId(id){for(var i=0;i<actions.length;i++){if(actions[i].id==id)
return actions[i];}
return null;}
function initActions(){for(var t=0;t<actionData.length;t++){var item=new ActionInfo();item.id=actionData[t].id;item.name=actionData[t].n;for(var tt=0;tt<actionData[t].rw.length;tt++){item.reward.push(createDataLink(actionData[t].rw[tt].t,actionData[t].rw[tt].st,actionData[t].rw[tt].o,actionData[t].rw[tt].a));}
actions.push(item);}}
function finishInitActions(){for(var t=0;t<actions.length;t++){finishDataLinksInit(actions[t].reward);}}
var buildings=[];var BUILDING_AXE=0
var BUILDING_PICKAXE=1;var BUILDING_STORAGE=2;var BUILDING_TOWER1=4;var BUILDING_TOWER2=5;function BuildingInfo(){this.id=0;this.name="";this.description="";this.timerType=TRACKER_TYPE_MODULO;this.actionTime=0;this.processOnCellType=[];this.imageId=-1;this.imageRef=null;this.specialImageId=-1;this.specialImageRef=null;this.isVisible=false;this.isUserOwned=false;this.canUpgrade=false;this.needConnection=false;this.storage=false;this.connection=false;this.canSpawn=false;this.keepActionReady=false;this.powerCostPerUnit=0;this.cost=[];this.requirement=[];this.reward=[];this.totalCount=0;}
BuildingInfo.prototype.getBuildCost=function(){var ret=duplicateDataLinks(this.cost);if(this.powerCostPerUnit>0){for(var i=0;i<ret.length;i++){ret[i].amount=parseInt(Math.pow(this.powerCostPerUnit,this.totalCount)*ret[i].amount);}}
return ret;}
BuildingInfo.prototype.getUpgradeCost=function(level){var ret=this.getBuildCost();if(this.powerUpgradePerLevel>0){for(var i=0;i<ret.length;i++){ret[i].amount=parseInt(Math.pow(this.powerUpgradePerLevel,level)*ret[i].amount);}}
return ret;}
BuildingInfo.prototype.getReward=function(level){var ret=duplicateDataLinks(this.reward);if(this.powerRewardPerLevel>0){for(var i=0;i<ret.length;i++){ret[i].amount=parseInt(Math.pow(this.powerRewardPerLevel,level-1)*ret[i].amount);}}
return ret;}
BuildingInfo.prototype.getRequirement=function(level){var ret=duplicateDataLinks(this.requirement);if(this.powerRequirementPerLevel>0){for(var i=0;i<ret.length;i++){ret[i].amount=parseInt(Math.pow(this.powerRequirementPerLevel,level-1)*ret[i].amount);}}
return ret;}
BuildingInfo.prototype.process=function(level){if(hasDataLinks(this.getRequirement(level))){removeDataLinks(this.getRequirement(level));addDataLinks(this.getReward(level));}}
BuildingInfo.prototype.canBuy=function(){return hasDataLinks(this.cost);}
BuildingInfo.prototype.buy=function(){if(this.canBuy()){removeDataLinks(this.cost);this.totalCount++;}}
BuildingInfo.prototype.destroy=function(){this.totalCount--;}
function getBuildingFromId(id){for(var i=0;i<buildings.length;i++){if(buildings[i].id==id)
return buildings[i];}
return null;}
function initBuilding(){for(var t=0;t<buildingData.length;t++){var item=new BuildingInfo();item.id=buildingData[t].id;item.name=buildingData[t].n;item.description=buildingData[t].d;item.timerType=buildingData[t].tt;item.actionTime=buildingData[t].at;item.processOnCellType[0]=buildingData[t].pc;item.isUserOwned=buildingData[t].uo;item.canUpgrade=buildingData[t].cu;item.needConnection=buildingData[t].nc;item.storage=buildingData[t].is;item.connection=buildingData[t].ic;item.canSpawn=buildingData[t].cs;item.keepActionReady=buildingData[t].ka;item.imageId=buildingData[t].im;item.specialImageId=buildingData[t].si;item.powerCostPerUnit=buildingData[t].cop;item.powerUpgradePerLevel=buildingData[t].upp;item.powerRequirementPerLevel=buildingData[t].rqp;item.powerRewardPerLevel=buildingData[t].rwp;for(var tt=0;tt<buildingData[t].co.length;tt++){item.cost.push(createDataLink(buildingData[t].co[tt].t,buildingData[t].co[tt].st,buildingData[t].co[tt].o,buildingData[t].co[tt].a));}
for(var tt=0;tt<buildingData[t].rq.length;tt++){item.requirement.push(createDataLink(buildingData[t].rq[tt].t,buildingData[t].rq[tt].st,buildingData[t].rq[tt].o,buildingData[t].rq[tt].a));}
for(var tt=0;tt<buildingData[t].rw.length;tt++){item.reward.push(createDataLink(buildingData[t].rw[tt].t,buildingData[t].rw[tt].st,buildingData[t].rw[tt].o,buildingData[t].rw[tt].a));}
buildings.push(item);}}
function finishInitBuilding(){for(var t=0;t<buildings.length;t++){buildings[t].imageRef=getImageFromName(buildings[t].imageId);buildings[t].specialImageRef=getImageFromName(buildings[t].specialImageId);finishDataLinksInit(buildings[t].cost);finishDataLinksInit(buildings[t].requirement);finishDataLinksInit(buildings[t].reward);}}
function BuildingInstanceInfo(){this.buildingId=-1;this.buildingRef=null;this.level=1;this.timeTracker=null;this.actionReady=false;}
BuildingInstanceInfo.prototype.canProcessOnCellState=function(state){var building=this.buildingRef;if(building.processOnCellType.length==0)
return true;if(building.processOnCellType[0]==-1)
return true;for(var t=0;t<building.processOnCellType.length;t++)
if(building.processOnCellType[t]==state.typeId)
return true;return false;}
BuildingInstanceInfo.prototype.process=function(){var building=this.buildingRef;if(!building.keepActionReady)
this.actionReady=false;if(building.actionTime>0){if(this.timeTracker.canExecute()){this.actionReady=true;}}
if(this.actionReady){if(!building.keepActionReady){building.process(this.level);this.timeTracker.reset();}
return true;}
return false;}
BuildingInstanceInfo.prototype.resetAction=function(){this.actionReady=false;this.timeTracker.reset();}
function createBuildingInstance(buildingId){var item=new BuildingInstanceInfo();var building=getBuildingFromId(buildingId);item.buildingId=buildingId;item.buildingRef=building;if(building.actionTime>0)
item.timeTracker=createTimerTracker(building.timerType,building.actionTime);else
item.timeTracker=null;return item;}
function CellInfo(){this.originalState=0;this.updatedState=-1;this.originalStateRef=null;this.updatedStateRef=null;this.isConnection=false;this.buildingInstance=null;this.timeTracker=null;}
CellInfo.prototype.getStateId=function(){if(this.updatedState==-1)
return this.originalState;return this.updatedState;}
CellInfo.prototype.getStateRef=function(){if(this.updatedState==-1||this.updatedStateRef==null)
return this.originalStateRef;return this.updatedStateRef;}
CellInfo.prototype.resetBuildingTimer=function(){if(this.buildingInstance!=null){if(this.buildingInstance.timeTracker!=null){this.buildingInstance.resetAction();}}}
CellInfo.prototype.process=function(){var state=this.getStateRef();if(this.buildingInstance==null&&state.initialBuilding>=0){this.buildingInstance=createBuildingInstance(state.initialBuilding);}
if(this.buildingInstance!=null&&(this.isConnection||!this.buildingInstance.buildingRef.needConnection)){if(this.buildingInstance.canProcessOnCellState(state)){if(this.buildingInstance.process()){}}}
if(state.changeStateOnQuestAction>=0){if(state.questRef.completed)
this.changeState(state.changeStateOnQuestAction);}
if(state.actionTimerFrom>=0&&state.actionTimerTo>=0){if(this.timeTracker==null){if(state.actionTimerFrom!=state.actionTimerTo)
this.timeTracker=createTimerTracker(TRACLER_TYPE_DELAY,getRandomNumber(state.actionTimerFrom,state.actionTimerTo));else
this.timeTracker=createTimerTracker(TRACLER_TYPE_DELAY,state.actionTimerTo);}
else if(this.timeTracker.canExecute()){if(state.actionTimerFrom!=state.actionTimerTo)
this.timeTracker.changeDeltaAndReset(getRandomNumber(state.actionTimerFrom,state.actionTimerTo));else
this.timeTracker.reset();if(state.changeStateOnTimerAction>=0)
this.changeState(state.changeStateOnTimerAction);}}}
CellInfo.prototype.changeState=function(newState){this.timeTracker=null;this.updatedState=newState;this.updatedStateRef=getCellStateFromId(newState);}
CellInfo.prototype.processClick=function(){var state=this.getStateRef();if(state.processClick()){if(state.changeStateOnClickAction>=0){this.changeState(state.changeStateOnClickAction);}
return true;}
return false;}
CellInfo.prototype.destroyBuilding=function(){if(this.buildingInstance!=null){var building=this.buildingInstance.buildingRef;building.destroy();this.buildingInstance=null;}}
CellInfo.prototype.canPutBuilding=function(buildingRef){if(this.buildingInstance!=null)
return false;var state=this.getStateRef();for(var t=0;t<buildingRef.processOnCellType.length;t++){if(buildingRef.processOnCellType[t]==state.typeId)
return true;}
return false;}
CellInfo.prototype.putBuilding=function(buildingId){var building=getBuildingFromId(buildingId);if(!this.canPutBuilding(building))
return;this.buildingInstance=createBuildingInstance(buildingId);}
CellInfo.prototype.completeQuest=function(){var state=this.getStateRef();if(state.questId>=0){var quest=state.questRef;quest.complete();return true;}
return false;}
CellInfo.prototype.resetCell=function(){this.updatedState=-1;this.isConnection=false;this.destroyBuilding();this.timeTracker=null;this.canSpawnEnemy=false;}
function getSaveCellInfo(item){var data=new Object();data.os=item.originalState;return data;}
function loadCellInfo2(cellStateId){var item=new CellInfo();item.originalState=cellStateId;item.originalStateRef=getCellStateFromId(item.originalState);return item;}
var STATE_TYPE_NONE=0;var STATE_TYPE_ROCK=1;var STATE_TYPE_TREE=2;var STATE_TYPE_GROUND=3;var STATE_TYPE_WATER=4;var STATE_TYPE_STREAM=5;var cellStates=[];function CellStateInfo(){this.id=0;this.name="";this.editorName="";this.typeId=STATE_TYPE_NONE;this.floorImageId="";this.objectImageId="";this.editorImageId="";this.clickActionId=-1;this.enemyPath=false;this.enemyPathEnd=false;this.questId=-1;this.mapId=-1;this.initialBuilding=-1;this.actionTimerFrom=-1;this.actionTimerTo=-1;this.changeStateOnClickAction=-1;this.changeStateOnTimerAction=-1;this.changeStateOnQuestAction=-1;this.effectCloud=false;this.floorImageRef=null;this.objectImageRef=null;this.editorImageRef=null;this.clickActionRef=null;this.questRef=null;}
CellStateInfo.prototype.processClick=function(){if(this.questRef!=null){this.questRef.increaseClickCount();}
if(this.clickActionId>=0){var action=this.clickActionRef;action.process();return true;}
return false;}
function getCellStateTypeName(typeId){if(typeId==STATE_TYPE_NONE)
return"None";if(typeId==STATE_TYPE_ROCK)
return"Rock";if(typeId==STATE_TYPE_TREE)
return"Tree";if(typeId==STATE_TYPE_GROUND)
return"Ground";if(typeId==STATE_TYPE_WATER)
return"Water";if(typeId==STATE_TYPE_STREAM)
return"Stream";return"";}
function getCellStateFromId(id){for(var i=0;i<cellStates.length;i++){if(cellStates[i].id==id)
return cellStates[i];}
return null;}
function initCellStates(){for(var t=0;t<cellStateData.length;t++){var item=new CellStateInfo();item.id=cellStateData[t].id;item.name=cellStateData[t].n;item.description=cellStateData[t].d
item.typeId=cellStateData[t].ty;item.floorImageId=cellStateData[t].fi;item.objectImageId=cellStateData[t].oi;item.clickActionId=cellStateData[t].ca;item.enemyPath=cellStateData[t].ep;item.enemyPathEnd=cellStateData[t].epe;item.questId=cellStateData[t].qu;item.mapId=cellStateData[t].ma;item.initialBuilding=cellStateData[t].ib;item.actionTimerFrom=cellStateData[t].atf;item.actionTimerTo=cellStateData[t].att;item.changeStateOnClickAction=cellStateData[t].csc;item.changeStateOnTimerAction=cellStateData[t].tsc;item.changeStateOnQuestAction=cellStateData[t].qsc;item.effectCloud=cellStateData[t].ec;cellStates.push(item);}}
function finishInitCellStates(){for(var t=0;t<cellStates.length;t++){cellStates[t].floorImageRef=getImageFromName(cellStates[t].floorImageId);cellStates[t].objectImageRef=getImageFromName(cellStates[t].objectImageId);cellStates[t].editorImageRef=getImageFromName(cellStates[t].editorImageId);cellStates[t].clickActionRef=getActionFromId(cellStates[t].clickActionId);cellStates[t].questRef=getQuestFromId(cellStates[t].questId);}}
var DLTYPE_RESOURCE=0;var DLTYPE_MAP=1;var DLTYPE_BUILDING=2;var DLTYPE_ENEMY=3;var DLSUBTYPE_AMOUNT=0;var DLSUBTYPE_ACTIVE=1;var DLSUBTYPE_VISIBLE=2;var DLSUBTYPE_KILL=3;function DataLinkInfo(){this.typeId=-1;this.subTypeId=-1;this.objectId=0;this.amount=0;this.objectRef=null;}
function duplicateDataLink(srcDl){var dl=new DataLinkInfo();dl.typeId=srcDl.typeId;dl.subTypeId=srcDl.subTypeId;dl.objectId=srcDl.objectId;dl.amount=srcDl.amount;dl.objectRef=srcDl.objectRef;return dl;}
function createDataLink(typeId,subTypeId,objectId,amount){var dl=new DataLinkInfo();dl.typeId=typeId;dl.subTypeId=subTypeId;dl.objectId=objectId;dl.amount=amount;finishDataLinkInit(dl);return dl;}
function createDataLink_ResourceAmount(objectId,amount){return createDataLink(DLTYPE_RESOURCE,DLSUBTYPE_AMOUNT,objectId,amount);}
function hasDataLink(link){if(link.typeId==DLTYPE_RESOURCE){if(link.subTypeId==DLSUBTYPE_AMOUNT){if(link.objectRef.amount>=link.amount)
return true;}}
if(link.typeId==DLTYPE_ENEMY){if(link.subTypeId==DLSUBTYPE_KILL){if(link.objectRef.totalKill>=link.amount)
return true;}}
return false;}
function removeDataLink(link){if(link.typeId==DLTYPE_RESOURCE){if(link.subTypeId==DLSUBTYPE_AMOUNT){link.objectRef.addAmount(-link.amount);}}}
function addDataLink(link){if(link.typeId==DLTYPE_RESOURCE){if(link.subTypeId==DLSUBTYPE_AMOUNT){link.objectRef.addAmount(link.amount);}}
if(link.typeId==DLTYPE_MAP){if(link.subTypeId==DLSUBTYPE_ACTIVE){link.objectRef.active=(link.amount==1);}}
if(link.typeId==DLTYPE_BUILDING){if(link.subTypeId==DLSUBTYPE_VISIBLE){link.objectRef.isVisible=(link.amount==1);}}}
function duplicateDataLinks(srcDls){var ret=[];for(var i=0;i<srcDls.length;i++)
ret.push(duplicateDataLink(srcDls[i]));return ret;}
function hasDataLinks(links){for(var t=0;t<links.length;t++){if(!hasDataLink(links[t]))
return false;}
return true;}
function removeDataLinks(links){for(var t=0;t<links.length;t++){removeDataLink(links[t]);}}
function addDataLinks(links){for(var t=0;t<links.length;t++){addDataLink(links[t]);}}
function finishDataLinkInit(link){if(link.typeId==DLTYPE_RESOURCE)
link.objectRef=getResourceFromId(link.objectId);if(link.typeId==DLTYPE_MAP)
link.objectRef=getMapFromId(link.objectId);if(link.typeId==DLTYPE_BUILDING)
link.objectRef=getBuildingFromId(link.objectId);if(link.typeId==DLTYPE_ENEMY)
link.objectRef=getEnemyFromId(link.objectId);}
function finishDataLinksInit(links){for(var t=0;t<links.length;t++){finishDataLinkInit(links[t]);}}
var enemies=[];function EnemyInfo(){this.id=0;this.name="";this.imageId=-1;this.baseLife=5;this.movementSpeed=1000;this.imageRef=null;this.totalKill=0;}
function getEnemyFromId(id){for(var i=0;i<enemies.length;i++){if(enemies[i].id==id)
return enemies[i];}
return null;}
function initEnemy(){for(var t=0;t<enemyData.length;t++){var item=new EnemyInfo();item.id=enemyData[t].id;item.name=enemyData[t].n;item.imageId=enemyData[t].im;item.baseLife=enemyData[t].bl;item.movementSpeed=enemyData[t].ms;enemies.push(item);}}
function finishInitEnemy(){for(var t=0;t<enemies.length;t++){enemies[t].imageRef=getImageFromName(enemies[t].imageId);}}
function EnemyInstance(){this.enemyId=0;this.x=0;this.y=0;this.mx=0;this.my=0;this.life=5;this.distance=0;this.enemyRef=null;}
EnemyInstance.prototype.process=function(map){var enemy=this.enemyRef;if(mainTimer.canExecute(enemy.movementSpeed)){if(this.mx==0&&this.my==0){var d=map.findEnemyPathAround(this.x,this.y);this.mx=d.x;this.my=d.y;}
var d=map.getEnemyMovement(this.x,this.y,this.mx,this.my);this.mx=d.x;this.my=d.y;this.x+=this.mx;this.y+=this.my;this.distance+=1;}}
function createEnemyInstance(x,y,enemyId,level){var item=new EnemyInstance();var baseEnemy=getEnemyFromId(enemyId);item.enemyId=enemyId;item.x=x;item.y=y;item.life=baseEnemy.baseLife*level;item.enemyRef=getEnemyFromId(item.enemyId);return item;}
var EVENT_NONE=0;var EVENT_EXPLOSION=1;var EVENT_RAY=2;var EVENT_IMAGEREF=3;var exEvent=[];function ExternalEventInfo(){this.mapId=-1;this.cellX=-1;this.cellY=-1;this.eventType=EVENT_NONE;this.imageRef=null;}
function setEvent_Explosion(mapId,x,y){var item=new ExternalEventInfo();item.mapId=mapId;item.cellX=x;item.cellY=y;item.eventType=EVENT_EXPLOSION;exEvent.push(item);}
function setEvent_Ray(mapId,x,y){var item=new ExternalEventInfo();item.mapId=mapId;item.cellX=x;item.cellY=y;item.eventType=EVENT_RAY;exEvent.push(item);}
function setEvent_ImageRef(mapId,x,y,imageRef){var item=new ExternalEventInfo();item.mapId=mapId;item.cellX=x;item.cellY=y;item.eventType=EVENT_IMAGEREF;item.imageRef=imageRef;exEvent.push(item);}
var selectedMapId=0;var selectedCellX=0;var selectedCellY=0;var selectedMapRef=null;var extraSpeed=false;var userUniqueID=uuidv4();function glInitAll(){initImages();initResource();initActions();initCellStates();initBuilding();initEnemy();initQuest();initWorld();initTimer();initMap();buildings[BUILDING_AXE].isVisible=true;buildings[BUILDING_PICKAXE].isVisible=true;buildings[BUILDING_STORAGE].isVisible=true;maps[0].active=true;finishInitImages();finishInitResource();finishInitActions();finishInitCellStates();finishInitBuilding();finishInitEnemy();finishInitQuest();finishInitMap();finishInitWorld();glChangeSelectedMap(0);}
function glChangeSelectedMap(newMapId){selectedMapId=newMapId;selectedMapRef=getMapFromId(selectedMapId);}
function glStartMainLoop(df){setInterval(glMainLoop,timerSpeed);}
function glMainLoop(){while(processTimer()){resetResourceDelta();for(var t=0;t<maps.length;t++){maps[t].process();}}}
function glProcessClick(x,y){var curMap=selectedMapRef;selectedCellX=x;selectedCellY=y;curMap.processClick(x,y);}
function glProcessDestroy(x,y){var curMap=selectedMapRef;selectedCellX=x;selectedCellY=y;curMap.destroyBuilding(x,y);}
function glProcessBuyBuilding(x,y,buildingId){var curMap=selectedMapRef;var building=getBuildingFromId(buildingId);selectedCellX=x;selectedCellY=y;if(building.canBuy())
curMap.buyBuilding(x,y,buildingId);}
function glLevelUpBuilding(x,y){selectedCellX=x;selectedCellY=y;glLevelUpSelectedBuilding();}
function glLevelDownBuilding(x,y){selectedCellX=x;selectedCellY=y;glLevelDownSelectedBuilding();}
function glLevelUpSelectedBuilding(){var curMap=selectedMapRef;curMap.levelBuilding(selectedCellX,selectedCellY);}
function glLevelDownSelectedBuilding(){var curMap=selectedMapRef;curMap.levelDownBuilding(selectedCellX,selectedCellY);}
function glStartSpawn(){var curMap=selectedMapRef;curMap.startSpawn();}
function glCompleteSelectedCellQuest(){var curMap=selectedMapRef;curMap.completeQuest(selectedCellX,selectedCellY);}
var coordPlus=[{x:0,y:-1},{x:-1,y:0},{x:1,y:0},{x:0,y:1}];var coordCorner=[{x:-1,y:-1},{x:1,y:-1},{x:-1,y:1},{x:1,y:1}];var coordCircle=[{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:-1,y:0},{x:1,y:0},{x:-1,y:1},{x:0,y:1},{x:1,y:1}];const getRandomNumber=(min,max)=>{return Math.floor(Math.random()*(max-min+1))+min;};var download_csv_using_blob=function(file_name,content){var csvData=new Blob([content],{type:'text/plain'});if(window.navigator&&window.navigator.msSaveOrOpenBlob){window.navigator.msSaveOrOpenBlob(csvData,file_name);}else{var a=document.createElement("a");document.body.appendChild(a);a.style="display: none";var csvUrl=URL.createObjectURL(csvData);a.href=csvUrl;a.download=file_name;a.click();URL.revokeObjectURL(a.href)
a.remove();}};var download_img_using_blob=function(file_name,content){if(window.navigator&&window.navigator.msSaveOrOpenBlob){window.navigator.msSaveOrOpenBlob(csvData,file_name);}else{var a=document.createElement("a");document.body.appendChild(a);a.style="display: none";a.href=content;a.download=file_name;a.click();URL.revokeObjectURL(a.href)
a.remove();}};function writeDebug(str){document.getElementById("debug").value=str;document.getElementById("debug").style.display="";}
function uuidv4(){return'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});}
function tickToTimeString(tick){var str="";tick/=1000;var d=parseInt((tick/(60*60*24)));tick-=d*(60*60*24);var h=parseInt((tick/(60*60)));tick-=h*(60*60);var m=parseInt((tick/(60)));tick-=m*(60);var s=parseInt(tick);str=d+"d "+h+"h "+m+"m "+s+"s";return str;}
var images=[];var spriteSheetImage;var IMAGE_WIDTH=32;var IMAGE_HEIGHT=32;var IMAGE_CURSOR="_cursor";var IMAGE_UPGRADE="_upgrade";var IMAGE_DOWNGRADE="_downgrade";var IMAGE_TRASHCAN="_trashcan";var IMAGE_SELECT="_select";var IMAGE_CLOUD="large_cloud";var IMAGE_NOCONNECTION="_no_connection";var IMAGE_CLOUD2="_cloud2";var IMAGE_EXCLAMATION="_exclamation";var IMAGE_SMALLUPGRADE="_small_upgrade";var IMAGE_REDMIST="large_redmist";var IMAGE_BLACKER="_blacker";var IMAGE_EXPLOSION="_explosion";function ImageGroupInfo(){this.name="";this.fps=0;this.info=[];}
ImageGroupInfo.prototype.hasCorners=function(){return this.info.length>1;}
function ImageInfo(){this.x=0;this.y=0;this.w=0;this.h=0;}
function getImageFromName(name){for(var i=0;i<images.length;i++)
if(images[i].name==name)
return images[i];for(var i=0;i<images.length;i++)
if(images[i].name=="_"+name)
return images[i];return null;}
function initImages(){spriteSheetImage=document.getElementById("spritesheet");for(var t=0;t<spritesheetData.length;t++){var group=getImageFromName(spritesheetData[t].n);if(group==null){group=new ImageGroupInfo();group.name=spritesheetData[t].n;group.fps=spritesheetData[t].f;images.push(group);}
var info=new ImageInfo();info.x=spritesheetData[t].x;info.y=spritesheetData[t].y;info.w=spritesheetData[t].w;info.h=spritesheetData[t].h;group.info[spritesheetData[t].i]=info;}}
function finishInitImages(){}
var MAP_WIDTH=12;var MAP_HEIGHT=12;var maps=[];function MapInfo(){this.id=0;this.cells=[];this.spawnInfo=[];this.isSpawning=false;this.life=10;this.spawnCount=0;this.maxSpawnCount=0;this.active=false;this.enemies=[];this.imageRef=null;}
function MapSpawnInfo(){this.delay=1000;this.enemyId=0;this.level=0;this.count=0;}
MapInfo.prototype.startSpawn=function(){this.isSpawning=true;this.life=10;this.spawnCount=0;}
MapInfo.prototype.findSpawnLevel=function(spawnCount){var level=0;for(var t=0;t<this.spawnInfo.length;t++){spawnCount-=this.spawnInfo[t].count;if(spawnCount<0)
break;level++;}
if(level>=this.spawnInfo.length){level=this.spawnInfo.length-1;this.isSpawning=false;}
if(level<0)
level=0;return level;}
MapInfo.prototype.spawnNewEnemy=function(x,y){if(this.isSpawning){var ei;var level=this.findSpawnLevel(this.spawnCount);var spawn=this.spawnInfo[level];ei=createEnemyInstance(x,y,spawn.enemyId,spawn.level);this.spawnCount++;if(this.spawnCount>this.maxSpawnCount)
this.maxSpawnCount=this.spawnCount;this.enemies.push(ei);}}
MapInfo.prototype.process=function(){if(!this.active)
return;for(var y=0;y<MAP_HEIGHT;y++){for(var x=0;x<MAP_WIDTH;x++){var curCell=this.cells[x+(y*MAP_WIDTH)];curCell.process();if(curCell.buildingInstance!=null&&curCell.buildingInstance.actionReady){var building=curCell.buildingInstance.buildingRef;var enemyToHit=[];if(building.canSpawn){this.spawnNewEnemy(x,y);curCell.resetBuildingTimer();}
else if(curCell.buildingInstance.buildingId==BUILDING_TOWER1){enemyToHit=this.getFarthestEnemy(x,y);}
else if(curCell.buildingInstance.buildingId==BUILDING_TOWER2){enemyToHit=this.getAllSuroundEnemy(x,y);}
if(enemyToHit.length>0){curCell.buildingInstance.buildingRef.process(curCell.buildingInstance.level);curCell.resetBuildingTimer();for(var i=0;i<enemyToHit.length;i++){var hit=building.getReward(curCell.buildingInstance.level);enemyToHit[i].life-=hit[0].amount;setEvent_ImageRef(this.id,enemyToHit[i].x,enemyToHit[i].y,building.specialImageRef);if(enemyToHit[i].life<=0){enemyToHit[i].enemyRef.totalKill++;}}}}}}
this.moveEnemies();if(this.life<=0)
this.resetMap();}
MapInfo.prototype.getFarthestEnemy=function(x,y){var ret=[];var enemyRange=[];for(var i=0;i<coordPlus.length;i++){var mx=x+coordPlus[i].x;var my=y+coordPlus[i].y;if(mx>=0&&mx<MAP_WIDTH&&my>=0&&my<MAP_HEIGHT){for(var t=0;t<this.enemies.length;t++){if(this.enemies[t].x==mx&&this.enemies[t].y==my){enemyRange.push(this.enemies[t]);}}}}
if(enemyRange.length>0){var max=0;var index=-1;for(var i=0;i<enemyRange.length;i++){if(enemyRange[i].distance>max){max=enemyRange[i].distance;index=i;}}
if(index!=-1){ret[0]=enemyRange[index];}}
return ret;}
MapInfo.prototype.getAllSuroundEnemy=function(x,y){var enemyRange=[];for(var i=0;i<coordPlus.length;i++){var mx=x+coordPlus[i].x;var my=y+coordPlus[i].y;if(mx>=0&&mx<MAP_WIDTH&&my>=0&&my<MAP_HEIGHT){for(var t=0;t<this.enemies.length;t++){if(this.enemies[t].x==mx&&this.enemies[t].y==my){enemyRange.push(this.enemies[t]);}}}}
return enemyRange;}
MapInfo.prototype.moveEnemies=function(){for(var t=this.enemies.length-1;t>=0;t--){if(this.enemies[t].life>0){var curCell=this.cells[this.enemies[t].x+(this.enemies[t].y*MAP_WIDTH)];var curState=curCell.getStateRef();if(curState.enemyPathEnd){this.enemies.splice(t,1);this.life-=1;break;}}
if(this.enemies[t].life>0){this.enemies[t].process(this);}
if(this.enemies[t].life<=0){this.enemies.splice(t,1);}}}
MapInfo.prototype.processClick=function(x,y){var curCell=this.cells[x+(y*MAP_WIDTH)];if(curCell.processClick())
setEvent_Ray(this.id,x,y);}
MapInfo.prototype.destroyBuilding=function(x,y){var curCell=this.cells[x+(y*MAP_WIDTH)];if(curCell.buildingInstance!=null){var curBuilding=curCell.buildingInstance.buildingRef;if(curBuilding.isUserOwned){if(!this.isSpawning){while(curCell.buildingInstance.level>1)
this.levelDownBuilding(x,y);}
curCell.destroyBuilding();if(!this.isSpawning){var cost=curBuilding.getBuildCost();addDataLinks(cost);}
this.calculateConnections();setEvent_Explosion(this.id,x,y);}}}
MapInfo.prototype.buyBuilding=function(x,y,buildingId){var curCell=this.cells[x+(y*MAP_WIDTH)];var building=getBuildingFromId(buildingId);if(building.canBuy()&&curCell.canPutBuilding(building)){building.buy();curCell.putBuilding(buildingId);this.calculateConnections();setEvent_Ray(this.id,x,y);}}
MapInfo.prototype.levelBuilding=function(x,y){var curCell=this.cells[x+(y*MAP_WIDTH)];if(curCell.buildingInstance!=null){var curBuilding=curCell.buildingInstance.buildingRef;if(curBuilding.canUpgrade){var cost=curBuilding.getUpgradeCost(curCell.buildingInstance.level);if(hasDataLinks(cost)){removeDataLinks(cost);curCell.buildingInstance.level++;setEvent_Ray(this.id,x,y);}}}}
MapInfo.prototype.levelDownBuilding=function(x,y){var curCell=this.cells[x+(y*MAP_WIDTH)];if(curCell.buildingInstance!=null){var curBuilding=curCell.buildingInstance.buildingRef;if(curBuilding.canUpgrade){if(curCell.buildingInstance.level>1){if(!this.isSpawning){var cost=curBuilding.getUpgradeCost(curCell.buildingInstance.level-1);addDataLinks(cost);}
curCell.buildingInstance.level--;}}}}
MapInfo.prototype.completeQuest=function(x,y){var curCell=this.cells[x+(y*MAP_WIDTH)];if(curCell.completeQuest())
setEvent_Ray(this.id,x,y);}
MapInfo.prototype.resetMap=function(){this.enemies=[];for(var y=0;y<MAP_HEIGHT;y++){for(var x=0;x<MAP_WIDTH;x++){var curCell=this.cells[x+(y*MAP_WIDTH)];if(curCell.buildingInstance!=null){setEvent_Explosion(this.id,x,y);}
curCell.resetCell();}}
this.calculateConnections();this.isSpawning=false;this.life=10;this.spawnCount=0;}
MapInfo.prototype.findEnemyPathAround=function(x,y){var d={x:0,y:0};for(var i=0;i<coordPlus.length;i++){var curCell=this.cells[x+coordPlus[i].x+((y+coordPlus[i].y)*MAP_WIDTH)];var curState=curCell.getStateRef();if(curState.enemyPath){d.x=coordPlus[i].x;d.y=coordPlus[i].y;break;}}
return d;}
MapInfo.prototype.getEnemyMovement=function(x,y,dx,dy){var nx=x+dx;var ny=y+dy;var curCell=this.cells[nx+(ny*MAP_WIDTH)];var curState=curCell.getStateRef();if(!curState.enemyPath){nx=x+dy;ny=y+dx;curCell=this.cells[nx+(ny*MAP_WIDTH)];curState=curCell.getStateRef();if(curState.enemyPath){var tmp=dx;dx=dy;dy=tmp;}
else{var tmp=-dx;dx=-dy;dy=tmp;}}
return{x:dx,y:dy};}
MapInfo.prototype.calculateConnections=function(){var toProcess=[];var doneProcess=[];for(var y=0;y<MAP_HEIGHT;y++){for(var x=0;x<MAP_WIDTH;x++){var curCell=this.cells[x+(y*MAP_WIDTH)];curCell.isConnection=false;if(curCell.buildingInstance!=null){var building=curCell.buildingInstance.buildingRef;if(building.storage){toProcess.push({x:x,y:y});curCell.isConnection=true;}}}}
while(toProcess.length>0){var loc=toProcess[0];toProcess.splice(0,1);doneProcess.push(loc);for(var t=0;t<coordPlus.length;t++){var newX=loc.x+coordPlus[t].x;var newY=loc.y+coordPlus[t].y;if(newX>=0&&newX<MAP_WIDTH&&newY>=0&&newY<MAP_HEIGHT){var curCell=this.cells[newX+(newY*MAP_WIDTH)];if(curCell.buildingInstance!=null){var building=curCell.buildingInstance.buildingRef;if(building.connection){var found=false;for(var tt=0;tt<doneProcess.length;tt++){if(doneProcess[tt].x==newX&&doneProcess[tt].y==newY)
found=true;}
if(!found)
toProcess.push({x:newX,y:newY});}
curCell.isConnection=true;}}}}}
MapInfo.prototype.getConnectionNumber=function(x,y){var ret=0;if(y>0){var curCell=this.cells[x+((y-1)*MAP_WIDTH)];if(curCell.isConnection||curCell.buildingInstance!=null)
ret+=1;}
if(x>0){var curCell=this.cells[x-1+((y)*MAP_WIDTH)];if(curCell.isConnection||curCell.buildingInstance!=null)
ret+=2;}
if(x<MAP_WIDTH-1){var curCell=this.cells[x+1+((y)*MAP_WIDTH)];if(curCell.isConnection||curCell.buildingInstance!=null)
ret+=4;}
if(y<MAP_HEIGHT-1){var curCell=this.cells[x+((y+1)*MAP_WIDTH)];if(curCell.isConnection||curCell.buildingInstance!=null)
ret+=8;}
return ret;}
function getActiveMapCount(){var cnt=0;for(var i=0;i<maps.length;i++){if(maps[i].active)
cnt++;}
return cnt;}
function getMapFromId(id){for(var i=0;i<maps.length;i++){if(maps[i].id==id)
return maps[i];}
return null;}
function initMap(){for(var t=0;t<mapData.length;t++){var item=new MapInfo();item.id=mapData[t].id;item.name=mapData[t].n;item.spawnInfo=[];for(var i=0;i<MAP_WIDTH*MAP_HEIGHT;i++){item.cells[i]=new CellInfo();if(i<mapData[t].c.length)
item.cells[i]=loadCellInfo2(mapData[t].c[i]);}
for(var i=0;i<mapData[t].sp.length;i++){var spawn=new MapSpawnInfo();spawn.delay=mapData[t].sp[i].d;spawn.enemyId=mapData[t].sp[i].e;spawn.level=mapData[t].sp[i].l;spawn.count=mapData[t].sp[i].c;item.spawnInfo.push(spawn);}
maps.push(item);}}
function finishInitMap(){for(var t=0;t<maps.length;t++){maps[t].imageRef=getImageFromName("map_map_"+maps[t].id);}}
var quests=[];function QuestInformation(){this.id=0;this.title="";this.startStory="";this.endStory="";this.startSummary="";this.endSummary="";this.requirements=[];this.rewards=[];this.completed=false;this.clickCount=0;}
QuestInformation.prototype.increaseClickCount=function(){if(this.clickCount==0)
analyticsStartQuest(this.id);this.clickCount+=1;}
QuestInformation.prototype.canComplete=function(){if(this.completed)
return false;if(hasDataLinks(this.requirements))
return true;return false;}
QuestInformation.prototype.complete=function(){if(!this.canComplete())
return false;removeDataLinks(this.requirements);addDataLinks(this.rewards);this.completed=true;analyticsFinishQuest(this.id);return true;}
QuestInformation.prototype.isNewQuest=function(){return this.clickCount==0;}
function getQuestFromId(id){for(var i=0;i<quests.length;i++){if(quests[i].id==id)
return quests[i];}
return null;}
function initQuest(){for(var t=0;t<questData.length;t++){var item=new QuestInformation();item.id=questData[t].id;item.title=questData[t].n;item.startStory=questData[t].ss;item.startSummary=questData[t].su;item.endStory=questData[t].es;item.endSummary=questData[t].eu;for(var tt=0;tt<questData[t].rq.length;tt++){item.requirements.push(createDataLink(questData[t].rq[tt].t,questData[t].rq[tt].st,questData[t].rq[tt].o,questData[t].rq[tt].a));}
for(var tt=0;tt<questData[t].rw.length;tt++){item.rewards.push(createDataLink(questData[t].rw[tt].t,questData[t].rw[tt].st,questData[t].rw[tt].o,questData[t].rw[tt].a));}
quests.push(item);}}
function finishInitQuest(){for(var t=0;t<quests.length;t++){finishDataLinksInit(quests[t].requirements);finishDataLinksInit(quests[t].rewards);}}
var resources=[];var RESOURCE_WOOD=0;var RESOURCE_STONE=1;function ResourceInfo(){this.id=0;this.name="";this.description="";this.alwaysHidden=false;this.amount=0;this.deltaAmount=0;this.isSpecial=false;this.specialMaxAmount=-1;this.maxAmount=0;this.totalAmount=0;}
ResourceInfo.prototype.isVisible=function(){if(this.alwaysHidden)
return false;if(this.isSpecial){if(this.amount>0)
return true;else
return false;}
if(this.totalAmount>0)
return true;return false;}
ResourceInfo.prototype.addAmount=function(a){if(this.isSpecial&&this.specialMaxAmount>0){if(this.amount+a>this.specialMaxAmount)
a=this.specialMaxAmount-this.amount;}
this.amount+=a;this.deltaAmount+=a;if(a>0)
this.totalAmount+=a;if(this.amount>this.maxAmount)
this.maxAmount=this.amount;}
function getResourceFromId(id){for(var i=0;i<resources.length;i++){if(resources[i].id==id)
return resources[i];}
return null;}
function resetResourceDelta(){if(mainTimer.canExecute(1000)){for(var i=0;i<resources.length;i++){resources[i].deltaAmount=0;}}}
function initResource(){for(var t=0;t<resourceData.length;t++){var item=new ResourceInfo();item.id=resourceData[t].id;item.name=resourceData[t].n;item.description=resourceData[t].d;item.alwaysHidden=resourceData[t].ah;item.isSpecial=resourceData[t].is;item.specialMaxAmount=resourceData[t].sm;resources.push(item);}}
function finishInitResource(){}
var _lastSaveState=new Date();function getSaveState(){var data=new Object();data.version="1";data.tt=mainTimer.totalTick;data.sd=Date.now();data.id=userUniqueID;data.re=[];data.en=[];data.bu=[];data.qu=[];data.ma=[];for(var t=0;t<resources.length;t++){data.re[t]=new Object();data.re[t].id=resources[t].id;data.re[t].am=resources[t].amount;data.re[t].ma=resources[t].maxAmount;data.re[t].ta=resources[t].totalAmount;}
for(var t=0;t<enemies.length;t++){data.en[t]=new Object();data.en[t].id=enemies[t].id;data.en[t].tk=enemies[t].totalKill;}
for(var t=0;t<buildings.length;t++){data.bu[t]=new Object
data.bu[t].id=buildings[t].id;data.bu[t].iv=buildings[t].isVisible;data.bu[t].tc=buildings[t].totalCount;}
for(var t=0;t<quests.length;t++){data.qu[t]=new Object
data.qu[t].id=quests[t].id;data.qu[t].co=quests[t].completed;data.qu[t].cc=quests[t].clickCount;}
for(var t=0;t<maps.length;t++){data.ma[t]=new Object();data.ma[t].id=maps[t].id
data.ma[t].ia=maps[t].active;data.ma[t].is=maps[t].isSpawning;data.ma[t].li=maps[t].life;data.ma[t].sc=maps[t].spawnCount;data.ma[t].msc=maps[t].maxSpawnCount;data.ma[t].c=[];for(var tt=0;tt<maps[t].cells.length;tt++){if(maps[t].cells[tt].updatedState>-1||maps[t].cells[tt].buildingInstance!=null){var c=new Object();c.p=tt
c.ic=maps[t].cells[tt].isConnection;if(maps[t].cells[tt].buildingInstance!=null&&maps[t].cells[tt].buildingInstance.buildingRef.isUserOwned){c.b=maps[t].cells[tt].buildingInstance.buildingId;c.bl=maps[t].cells[tt].buildingInstance.level;}
else{c.b=-1;}
data.ma[t].c.push(c);}}}
_lastSaveState=new Date();return data;}
function setSaveState(data){if(data.version=="1"){mainTimer.loadTick(data.tt);userUniqueID=data.id;for(var t=0;t<data.re.length;t++){var item=getResourceFromId(data.re[t].id);if(item!=null){item.amount=data.re[t].am;item.maxAmount=data.re[t].ma;item.totalAmount=data.re[t].ta;}}
for(var t=0;t<data.en.length;t++){var item=getEnemyFromId(data.en[t].id);if(item!=null){item.totalKill=data.en[t].tk;}}
for(var t=0;t<data.qu.length;t++){var item=getQuestFromId(data.qu[t].id);if(item!=null){item.completed=data.qu[t].co;item.clickCount=data.qu[t].cc;}}
for(var t=0;t<data.ma.length;t++){var item=getMapFromId(data.ma[t].id);if(item!=null){item.active=data.ma[t].ia;item.isSpawning=data.ma[t].is;item.life=data.ma[t].li;item.spawnCount=data.ma[t].sc;item.maxSpawnCount=data.ma[t].msc;for(var tt=0;tt<data.ma[t].c.length;tt++){item.cells[data.ma[t].c[tt].p].isConnection=data.ma[t].c[tt].ic;item.cells[data.ma[t].c[tt].p].updatedStateRef=getCellStateFromId(item.cells[data.ma[t].c[tt].p].updatedState);if(data.ma[t].c[tt].b!=-1){item.cells[data.ma[t].c[tt].p].buildingInstance=createBuildingInstance(data.ma[t].c[tt].b);item.cells[data.ma[t].c[tt].p].buildingInstance.level=data.ma[t].c[tt].bl;}}}}
for(var t=0;t<data.bu.length;t++){var item=getBuildingFromId(data.bu[t].id);if(item!=null){item.isVisible=data.bu[t].iv;item.totalCount=data.bu[t].tc;}}}
_lastSaveState=new Date();}
function getSaveStateJson64(){var saveData=getSaveState();var json=JSON.stringify(saveData);var json64=btoa(json);return json64;}
function setSaveStateJson64(json64){var json=atob(json64);var saveData=JSON.parse(json);setSaveState(saveData);}
var mainTimer;var timerSpeed=30;var TRACKER_TYPE_MODULO=0;var TRACLER_TYPE_DELAY=1;function TimerInfo(){this.totalTick=0;this.lastProcess=null;this.timers=new Map();}
TimerInfo.prototype.loadTick=function(newTick){this.totalTick=newTick;this.lastProcess=null;this.timers=new Map();}
TimerInfo.prototype.getNextTick=function(delta){return this.totalTick+parseInt(delta/timerSpeed);}
TimerInfo.prototype.hasPassTick=function(tick){if(this.totalTick>=tick)
return true;return false;}
TimerInfo.prototype.canExecute=function(delta){if(this.totalTick==0)
return false;if(!this.timers.has(delta))
this.timers.set(delta,this.totalTick%parseInt(delta/timerSpeed));return this.timers.get(delta)==0;}
TimerInfo.prototype.process=function(){var hadTick=false;var newTimerSpeed=timerSpeed;if(extraSpeed)
newTimerSpeed/=10;if(this.lastProcess==null){this.lastProcess=(new Date()).getTime();}
else{if((new Date()).getTime()-this.lastProcess>=newTimerSpeed){this.totalTick++;this.lastProcess+=newTimerSpeed;this.timers=new Map();hadTick=true;}}
return hadTick;}
function TimeTrackerInfo(){this.typeId=-1;this.deltaTime=-1;this.nextTick=-1;}
TimeTrackerInfo.prototype.canExecute=function(){if(this.typeId==-1)
return false;if(this.typeId==TRACKER_TYPE_MODULO&&this.deltaTime>-1){return mainTimer.canExecute(this.deltaTime);}
else if(this.typeId==TRACLER_TYPE_DELAY&&this.nextTick>-1){return mainTimer.hasPassTick(this.nextTick);}
return false;}
TimeTrackerInfo.prototype.changeDeltaAndReset=function(newDelta){this.deltaTime=newDelta;this.reset();}
TimeTrackerInfo.prototype.reset=function(){if(this.typeId==TRACKER_TYPE_MODULO){}
else if(this.typeId==TRACLER_TYPE_DELAY){this.nextTick=mainTimer.getNextTick(this.deltaTime);}}
function createModuleTracker(delta){var item=new TimeTrackerInfo();item.typeId=TRACKER_TYPE_MODULO;item.deltaTime=delta;item.reset();return item;}
function createDelayTracker(delta){var item=new TimeTrackerInfo();item.typeId=TRACLER_TYPE_DELAY;item.deltaTime=delta;item.reset();return item;}
function createTimerTracker(typeId,delta){var item=new TimeTrackerInfo();item.typeId=typeId;item.deltaTime=delta;item.reset();return item;}
function initTimer(){mainTimer=new TimerInfo();}
function processTimer(){return mainTimer.process();}
var mainWorld=null;function WorldInfo(){this.mapInfo=[];this.offsetX=0;this.offsetY=0;this.width=0;this.height=0;this.mapRefs=[];}
WorldInfo.prototype.getMinLoc=function(){var ret={x:this.mapInfo[0].x,y:this.mapInfo[0].y};for(var t=0;t<this.mapInfo.length;t++){if(this.mapInfo[t].x<ret.x)
ret.x=this.mapInfo[t].x;if(this.mapInfo[t].y<ret.y)
ret.y=this.mapInfo[t].y;}
return ret;}
WorldInfo.prototype.getMaxLoc=function(){var ret={x:this.mapInfo[0].x,y:this.mapInfo[0].y};for(var t=0;t<this.mapInfo.length;t++){if(this.mapInfo[t].x>ret.x)
ret.x=this.mapInfo[t].x;if(this.mapInfo[t].y>ret.y)
ret.y=this.mapInfo[t].y;}
return ret;}
WorldInfo.prototype.getPosibleMovement=function(middleMapId){var pm=0;var mx,my;var found=false;for(var t=0;t<this.mapInfo.length;t++){if(this.mapInfo[t].mapId==middleMapId){mx=this.mapInfo[t].x;my=this.mapInfo[t].y;found=true;}}
if(found){var bit=[1,2,4,8];mx-=this.offsetX;my-=this.offsetY;for(var t=0;t<coordPlus.length;t++){var cx=mx+coordPlus[t].x;var cy=my+coordPlus[t].y;if(cx>=0&&cx<this.width&&cy>=0&&cy<this.height){if(this.mapRefs[cx+(cy*this.width)]!=null&&this.mapRefs[cx+(cy*this.width)].active)
pm+=bit[t];}}}
else
return-1;return pm;}
function WorldMapInfo(){this.x=0;this.y=0;this.mapId=0;this.mapRef=null;}
function initWorld(){mainWorld=new WorldInfo();for(var t=0;t<worldData[0].c.length;t++){var item=new WorldMapInfo();item.x=worldData[0].c[t].x;item.y=worldData[0].c[t].y;item.mapId=worldData[0].c[t].m;mainWorld.mapInfo.push(item);}}
function finishInitWorld(){for(var t=0;t<mainWorld.mapInfo.length;t++){mainWorld.mapInfo[t].mapRef=getMapFromId(mainWorld.mapInfo[t].mapId);}
var minLoc=mainWorld.getMinLoc();var maxLoc=mainWorld.getMaxLoc();mainWorld.offsetX=minLoc.x;mainWorld.offsetY=minLoc.y;mainWorld.width=maxLoc.x-minLoc.x+1;mainWorld.height=maxLoc.y-minLoc.y+1;mainWorld.mapRefs=[];for(var y=0;y<mainWorld.height;y++){for(var x=0;x<mainWorld.width;x++){mainWorld.mapRefs[x+(y*mainWorld.width)]=null;for(var t=0;t<mainWorld.mapInfo.length;t++){if(mainWorld.mapInfo[t].x==x+mainWorld.offsetX&&mainWorld.mapInfo[t].y==y+mainWorld.offsetY)
mainWorld.mapRefs[x+(y*mainWorld.width)]=mainWorld.mapInfo[t].mapRef;}}}}
var ACTION_CLICK=-1;var ACTION_UPGRADE=-2;var ACTION_DOWNGRADE=-3;var ACTION_DESTROY=-4;var selectedAction=ACTION_CLICK;function uiInitActions(){$("#actionList").append('<div id="action-1" onclick="uiSelectAction('+ACTION_CLICK+');" onmouseover="uiActionHover('+ACTION_CLICK+');" onmouseout="uiClearSoftTooltip();" class="pulse buildingSelected" style="margin: 2px; width: 34px; height: 34px; display: inline-block; cursor: pointer;">'+getImageDiv(getImageFromName(IMAGE_CURSOR).info[0])+'</div>');$("#actionList").append('<div id="action-2" onclick="uiSelectAction('+ACTION_UPGRADE+');" onmouseover="uiActionHover('+ACTION_UPGRADE+');" onmouseout="uiClearSoftTooltip();" class="pulse buildingNotSelected" style="margin: 2px; width: 34px; height: 34px; display: inline-block; cursor: pointer;">'+getImageDiv(getImageFromName(IMAGE_UPGRADE).info[0])+'</div>');$("#actionList").append('<div id="action-3" onclick="uiSelectAction('+ACTION_DOWNGRADE+');" onmouseover="uiActionHover('+ACTION_DOWNGRADE+');" onmouseout="uiClearSoftTooltip();" class="pulse buildingNotSelected" style="margin: 2px; width: 34px; height: 34px; display: inline-block; cursor: pointer;">'+getImageDiv(getImageFromName(IMAGE_DOWNGRADE).info[0])+'</div>');$("#actionList").append('<div id="action-4" onclick="uiSelectAction('+ACTION_DESTROY+');" onmouseover="uiActionHover('+ACTION_DESTROY+');" onmouseout="uiClearSoftTooltip();" class="pulse buildingNotSelected" style="margin: 2px; width: 34px; height: 34px; display: inline-block; cursor: pointer;">'+getImageDiv(getImageFromName(IMAGE_TRASHCAN).info[0])+'</div>');}
function uiDrawActions(){for(var t=0;t<buildings.length;t++){if(buildings[t].isVisible){if($("#action"+buildings[t].id).length==0){$("#actionBuildingList").append('<div id="action'+buildings[t].id+'" onclick="uiSelectAction('+buildings[t].id+');" onmouseover="uiBuildingHover('+buildings[t].id+');" onmouseout="uiClearSoftTooltip();" class="pulse buildingNotSelected" style="margin: 2px; width: 34px; height: 34px; display: inline-block; cursor: pointer;">'+getImageDiv(buildings[t].imageRef.info[0])+'</div>');}}}}
function uiSelectAction(actionId){$("#action"+selectedAction).removeClass("buildingSelected");$("#action"+selectedAction).addClass("buildingNotSelected");selectedAction=actionId;$("#action"+selectedAction).removeClass("buildingNotSelected");$("#action"+selectedAction).addClass("buildingSelected");if(selectedAction<0){uiSetHardTooltip(TOOLTIP_TYPE_ACTION,selectedAction);}
else{uiSetHardTooltip(TOOLTIP_TYPE_BUILDING,{buildingId:selectedAction,level:0});}}
function uiActionHover(actionId){uiSetSoftTooltip(TOOLTIP_TYPE_ACTION,actionId);}
function uiBuildingHover(buildingId){uiSetSoftTooltip(TOOLTIP_TYPE_BUILDING,{buildingId:buildingId,level:0});}
function uiUpgradeBuilding(){}
function uiCompleteQuest(){glCompleteSelectedCellQuest();}
var previousDrawCanvas=0;var deltaTime=0;var TIME_FOR_SAVE=1*60*1000;var isDebug=false;function loadApp(){uiSetHardTooltip(TOOLTIP_TYPE_MESSAGE,"Click on a forest or mountain to gain resources.");glInitAll();uiLoadGame();initAnalytics();uiInitCanvas();uiInitActions();uiInitEffect();uiDrawResources();uiDrawActions();uiInitWorldMap();if(isDebug){for(var t=0;t<resources.length;t++)
resources[t].addAmount(2000000);for(var t=0;t<enemies.length;t++)
enemies[t].totalKill=10000;for(var t=0;t<buildings.length;t++){if(buildings[t].isUserOwned)
buildings[t].isVisible=true;}
for(var t=0;t<maps.length;t++)
maps[t].active=true;}
if(!isDebug&&mainTimer.totalTick==0){$('#tutorialModal').modal('show');}
glStartMainLoop(null);setInterval(uiSaveGame,TIME_FOR_SAVE);window.requestAnimationFrame(drawCanvas);}
function drawCanvas(timestamp){if(previousDrawCanvas>0)
deltaTime=timestamp-previousDrawCanvas;uiUpdateEffect();uiDrawMap();drawUI();previousDrawCanvas=timestamp;window.requestAnimationFrame(drawCanvas);}
function drawUI(){uiDrawResources();uiDrawWorldMap();uiDrawActions();uiUpdateToolTip();uiDrawSpawn();}
function uiOpenAboutModal(){$("#realTimeElapse").text(tickToTimeString(mainTimer.totalTick*timerSpeed));$('#aboutModal').modal('show');}
var GRID_WIDTH=32;var GRID_HEIGHT=32;var c,ctx;var cachedImg_noConnection=null;var cachedImg_select=null;var cachedImg_cloud2=null
var cachedImg_cloud=null;var cachedImg_exclamation=null;var cachedImg_smallUpgrade=null;var cachedImg_redMist=null;var cachedImg_cursor=null;var cachedImg_blacker=null;var cachedImg_explosion=null;function uiInitCanvas(){c=document.getElementById("mainCanvas");ctx=c.getContext("2d");cachedImg_noConnection=getImageFromName(IMAGE_NOCONNECTION);cachedImg_select=getImageFromName(IMAGE_SELECT);cachedImg_cloud2=getImageFromName(IMAGE_CLOUD2);cachedImg_cloud=getImageFromName(IMAGE_CLOUD);cachedImg_exclamation=getImageFromName(IMAGE_EXCLAMATION);cachedImg_smallUpgrade=getImageFromName(IMAGE_SMALLUPGRADE);cachedImg_redMist=getImageFromName(IMAGE_REDMIST);cachedImg_cursor=getImageFromName(IMAGE_CURSOR);cachedImg_blacker=getImageFromName(IMAGE_BLACKER);cachedImg_explosion=getImageFromName(IMAGE_EXPLOSION);}
function uiDrawMap(){var curMap=selectedMapRef;var actionBuilding=null;if(selectedAction>=0){actionBuilding=getBuildingFromId(selectedAction);}
for(var y=0;y<MAP_HEIGHT;y++){for(var x=0;x<MAP_WIDTH;x++){var img;var curCell=curMap.cells[x+(y*MAP_WIDTH)];var curState=cellStates[curCell.getStateId()];if(curState!=null){if(curState.floorImageRef!=null){img=curState.floorImageRef;drawImage(ctx,img.info[0],x*GRID_WIDTH,y*GRID_HEIGHT);}
if(curState.objectImageRef!=null){img=curState.objectImageRef;drawImage(ctx,img.info[0],x*GRID_WIDTH,y*GRID_HEIGHT);}}
if(curCell.buildingInstance!=null){var building=curCell.buildingInstance.buildingRef;img=building.imageRef;if(img.hasCorners()){var conNum=curMap.getConnectionNumber(x,y);drawImage(ctx,img.info[conNum],x*GRID_WIDTH,y*GRID_HEIGHT);}
else{drawImage(ctx,img.info[0],x*GRID_WIDTH,y*GRID_HEIGHT);}
if(building.canUpgrade){drawText(ctx,curCell.buildingInstance.level,x,y);if(selectedAction==ACTION_UPGRADE){var cost=building.getUpgradeCost(curCell.buildingInstance.level);if(hasDataLinks(cost)){img=cachedImg_smallUpgrade;drawImage(ctx,img.info[0],x*GRID_WIDTH+effect_exclamationX,y*GRID_HEIGHT+effect_exclamationY);}}}
if(!curCell.isConnection&&building.needConnection){img=cachedImg_noConnection;drawImage(ctx,img.info[0],x*GRID_WIDTH,y*GRID_HEIGHT);}}
if(curState.questRef!=null&&curState.questRef.isNewQuest()){img=cachedImg_exclamation;drawImage(ctx,img.info[0],x*GRID_WIDTH+effect_exclamationX,y*GRID_HEIGHT+effect_exclamationY);}
if(x==selectedCellX&&y==selectedCellY){img=cachedImg_select;drawImage(ctx,img.info[0],x*GRID_WIDTH,y*GRID_HEIGHT);}
if(actionBuilding!=null){if(!curCell.canPutBuilding(actionBuilding)){img=cachedImg_blacker;drawImage(ctx,img.info[0],x*GRID_WIDTH,y*GRID_HEIGHT);}}}}
for(var i=0;i<curMap.enemies.length;i++){var ei=curMap.enemies[i];var curEnemy=ei.enemyRef;img=curEnemy.imageRef;drawImage(ctx,img.info[0],ei.x*GRID_WIDTH,ei.y*GRID_HEIGHT);drawText(ctx,ei.life,ei.x,ei.y);}
for(var t=0;t<runningAnimations.length;t++){var ind=runningAnimations[t].getImageIndex();img=runningAnimations[t].imageGroupRef;if(ind<img.info.length)
drawImage(ctx,img.info[ind],runningAnimations[t].cellX*GRID_WIDTH,runningAnimations[t].cellY*GRID_HEIGHT);}
for(var y=0;y<MAP_HEIGHT;y++){for(var x=0;x<MAP_WIDTH;x++){var img;var curCell=curMap.cells[x+(y*MAP_WIDTH)];var curState=cellStates[curCell.getStateId()];if(curState.effectCloud){img=cachedImg_cloud2;drawFullImage(ctx,img.info[0],x*GRID_WIDTH-16+getCloud2EffectX(x,y),y*GRID_HEIGHT-16);}}}
if(getResourceFromId(RESOURCE_WOOD).totalAmount==0){drawFullImage(ctx,cachedImg_cursor.info[0],8*GRID_WIDTH-16+effect_exclamationX,3*GRID_HEIGHT+8+effect_exclamationY);}
if(getResourceFromId(RESOURCE_STONE).totalAmount==0){drawFullImage(ctx,cachedImg_cursor.info[0],6*GRID_WIDTH-16+effect_exclamationX,0*GRID_HEIGHT+8+effect_exclamationY);}
if(curMap.isSpawning)
img=cachedImg_redMist
else
img=cachedImg_cloud;drawFullImage(ctx,img.info[0],effect_cloudX,effect_cloudY);drawFullImage(ctx,img.info[0],effect_cloudX+img.info[0].w,effect_cloudY);drawFullImage(ctx,img.info[0],effect_cloudX,effect_cloudY+img.info[0].h);drawFullImage(ctx,img.info[0],effect_cloudX+img.info[0].w,effect_cloudY+img.info[0].h);}
function drawImage(ctx,img,x,y){ctx.drawImage(spriteSheetImage,img.x,img.y,img.w,img.h,x,y,GRID_WIDTH,GRID_HEIGHT);}
function drawFullImage(ctx,img,x,y){ctx.drawImage(spriteSheetImage,img.x,img.y,img.w,img.h,x,y,img.w,img.h);}
function drawText(ctx,txt,x,y){ctx.strokeStyle="black";ctx.lineWidth=1;ctx.font="bold 16pt Tahoma";ctx.fillStyle='white';ctx.fillText(txt,x*GRID_WIDTH,y*GRID_HEIGHT+16);ctx.strokeText(txt,x*GRID_WIDTH,y*GRID_HEIGHT+16);}
function uiCanvasClick(e,evt){var pos=getMousePos(e,evt);var cellX=parseInt(pos.x/GRID_WIDTH);var cellY=parseInt(pos.y/GRID_HEIGHT);if(selectedAction==ACTION_CLICK){glProcessClick(cellX,cellY);}
else if(selectedAction==ACTION_UPGRADE){glLevelUpBuilding(cellX,cellY);}
else if(selectedAction==ACTION_DOWNGRADE){glLevelDownBuilding(cellX,cellY);}
else if(selectedAction==ACTION_DESTROY){glProcessDestroy(cellX,cellY);}
else if(selectedAction>=0){glProcessBuyBuilding(cellX,cellY,selectedAction);}
uiSetCellTooltip(cellX,cellY);}
function getMousePos(canvas,evt){var rect=canvas.getBoundingClientRect();return{x:evt.clientX-rect.left,y:evt.clientY-rect.top};}
var exclamation=0;var cloud2X=0;var cloudX=0;var cloudY=0;var effect_exclamationX=0;var effect_exclamationY=0;var effect_cloudX=0;var effect_cloudY=0;var runningAnimations=[];function AnimationEffectInfo(){this.imageGroupRef=null;this.startTime=0;this.cellX=0;this.cellY=0;this.calcFps=0;}
AnimationEffectInfo.prototype.getImageIndex=function(){var curTime=(new Date()).getTime();var index=Math.floor((curTime-this.startTime)/this.calcFps);return index;}
AnimationEffectInfo.prototype.isFinished=function(){if(this.getImageIndex()>=this.imageGroupRef.info.length)
return true;return false;}
function createAnimation_Ray(cellX,cellY){var item=new AnimationEffectInfo();item.imageGroupRef=getImageFromName("Anim_ray");item.startTime=(new Date()).getTime();item.cellX=cellX;item.cellY=cellY;item.calcFps=1000/item.imageGroupRef.fps;runningAnimations.push(item);return item;}
function createAnimation_Explosion(cellX,cellY){var item=new AnimationEffectInfo();item.imageGroupRef=getImageFromName("Anim_explosion");item.startTime=(new Date()).getTime();item.cellX=cellX;item.cellY=cellY;item.calcFps=1000/item.imageGroupRef.fps;runningAnimations.push(item);return item;}
function createAnimation_ImageRef(cellX,cellY,imageRef){var item=new AnimationEffectInfo();item.imageGroupRef=imageRef;item.startTime=(new Date()).getTime();item.cellX=cellX;item.cellY=cellY;item.calcFps=1000/item.imageGroupRef.fps;runningAnimations.push(item);return item;}
function uiInitEffect(){}
function uiUpdateEffect(){for(var t=0;t<exEvent.length;t++){if(selectedMapRef.id==exEvent[t].mapId){if(exEvent[t].eventType==EVENT_EXPLOSION)
createAnimation_Explosion(exEvent[t].cellX,exEvent[t].cellY);if(exEvent[t].eventType==EVENT_RAY)
createAnimation_Ray(exEvent[t].cellX,exEvent[t].cellY);if(exEvent[t].eventType==EVENT_IMAGEREF)
createAnimation_ImageRef(exEvent[t].cellX,exEvent[t].cellY,exEvent[t].imageRef);}}
for(var t=runningAnimations.length-1;t>=0;t--){if(runningAnimations[t].isFinished())
runningAnimations.splice(t,1);}
exEvent=[];cloudX-=10*(deltaTime/1000);cloudY-=10*(deltaTime/1000);if(cloudX<=-800)cloudX+=800;if(cloudY<=-463)cloudY+=463;cloud2X+=10*(deltaTime/1000);if(cloud2X>64)cloud2X-=64;exclamation+=10*(deltaTime/1000);if(exclamation>16)exclamation-=16;var m=parseInt(exclamation)%16;if(m>8)m=8-(m-8);effect_exclamationX=0;effect_exclamationY=m;effect_cloudX=parseInt(cloudX);effect_cloudY=parseInt(cloudY);}
function getCloud2EffectX(x,y){var m=cloud2X+((x+y)*4);m=parseInt(m)%64;if(m>32)m=32-(m-32);m-=16;return m;}
function clearRunningAnimation(){runningAnimations=[];}
function nFormatter(x){var isNeg=false;var pi=-1;var p=["K","M","B","T","q","Q"];var str="";if(x<0){x-=x;isNeg=true;}
while(x>1000){x/=1000;pi++;}
x=Math.floor(x*10)/10;str=x;if(pi>=0)
str+=p[pi];if(isNeg)
return"-"+str;return str;}
function nComaFormatter(x){return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",");}
function getImageDiv(imageInfo){return"<div class=\"spriteSheetBackground\" style=\"background-position-x: "+(-imageInfo.x)+"px; background-position-y: "+(-imageInfo.y)+"px; width: "+imageInfo.w+"px; height: "+imageInfo.h+"px;\"></div>";}
function dataLinksToString(dl){var str="";for(var t=0;t<dl.length;t++){if(dl[t].typeId==DLTYPE_RESOURCE)
str+=dl[t].objectRef.name+": "+nFormatter(dl[t].amount)+"<br />";else if(dl[t].typeId==DLTYPE_ENEMY){str+=dl[t].objectRef.name+": "+nFormatter(dl[t].objectRef.totalKill)+"/"+nFormatter(dl[t].amount)+"<br />";}
else
str+="???<br />";}
return str;}
function dataLinksToStringOneLine(dl){var str="";for(var t=0;t<dl.length;t++){if(t>0)
str+=", ";if(dl[t].typeId==DLTYPE_RESOURCE)
str+=nFormatter(dl[t].amount)+" "+dl[t].objectRef.name;else if(dl[t].typeId==DLTYPE_ENEMY){str+=dl[t].objectRef.name+": "+nFormatter(dl[t].objectRef.totalKill)+"/"+nFormatter(dl[t].amount)+"<br />";}
else
str+="???";}
return str;}
function dataLinksToStringOneAvailableLine(dl){var str="";for(var t=0;t<dl.length;t++){if(t>0)
str+=", ";var amt,needed,name;if(dl[t].typeId==DLTYPE_RESOURCE){amt=dl[t].objectRef.amount;needed=dl[t].amount;name=dl[t].objectRef.name;}
else if(dl[t].typeId==DLTYPE_ENEMY){amt=dl[t].objectRef.totalKill;needed=dl[t].amount;name=dl[t].objectRef.name;}
else
str+="???";if(amt<needed)
str+="<span style='color: lightgray;'>"+nFormatter(amt)+"/"+nFormatter(needed)+" "+name+"</span>";else
str+="<span>"+nFormatter(amt)+"/"+nFormatter(needed)+" "+name+"</span>";}
return str;}
function dataLinksToStringRequirementVertical(dl){var str="";for(var t=0;t<dl.length;t++){if(t>0)
str+="<br />";var amt,needed,name;if(dl[t].typeId==DLTYPE_RESOURCE){amt=dl[t].objectRef.amount;needed=dl[t].amount;name=dl[t].objectRef.name;}
else if(dl[t].typeId==DLTYPE_ENEMY){amt=dl[t].objectRef.totalKill;needed=dl[t].amount;name=dl[t].objectRef.name;}
else
str+="???";if(amt<needed)
str+=name+": <span style='color: lightgray;'>"+nFormatter(amt)+"/"+nFormatter(needed)+"</span>";else
str+=name+": <span>"+nFormatter(amt)+"/"+nFormatter(needed)+"</span>";}
return str;}
function uiShowModalQuestInformation(){var questId=currentHardToolTipInfo;var curQuest=getQuestFromId(questId);$("#questInfoModal-title").html(curQuest.title);$("#questInfoModal-desc").html(curQuest.startStory.replaceAll("\n","<br />"));if(curQuest.completed)
$("#questInfoModal-completeDesc").html(curQuest.endStory.replaceAll("\n","<br />"));else
$("#questInfoModal-completeDesc").html("");$("#questInfoModal-req").html(dataLinksToStringRequirementVertical(curQuest.requirements));$('#questInfoModal').modal('show');}
function uiDrawResources(){for(var t=0;t<resources.length;t++){var curResource=resources[t];if(!curResource.isVisible()&&$("#resourceInfoRow"+curResource.id).length>0){$("#resourceInfoRow"+curResource.id).remove();}
if(curResource.isVisible()){if($("#resourceInfoRow"+curResource.id).length==0){var newElement=$("#resourceInfoRow").clone();$(newElement).show();$(newElement).attr("id","resourceInfoRow"+curResource.id);$(newElement).find("#resourceInfoName").attr("id","resourceInfoName"+curResource.id);$(newElement).find("#resourceInfoAmount").attr("id","resourceInfoAmount"+curResource.id);$(newElement).find("#resourceInfoTickDelta").attr("id","resourceInfoTickDelta"+curResource.id);$("#resourceInfoContainer").append(newElement);$("#resourceInfoName"+curResource.id).text(curResource.name);$(newElement).click({id:curResource.id},uiShowResourceTooltipClick);$(newElement).mouseover({id:curResource.id},uiShowResourceTooltipHover);$(newElement).mouseout(uiClearSoftTooltip);}
$("#resourceInfoAmount"+curResource.id).text(nFormatter(curResource.amount));if(curResource.deltaAmount>0){$("#resourceInfoTickDelta"+curResource.id).text("+"+nFormatter(curResource.deltaAmount));$("#resourceInfoTickDelta"+curResource.id).css("color","green");}
else if(curResource.deltaAmount<0){$("#resourceInfoTickDelta"+curResource.id).text(nFormatter(curResource.deltaAmount));$("#resourceInfoTickDelta"+curResource.id).css("color","red");}
else{$("#resourceInfoTickDelta"+curResource.id).text("");$("#resourceInfoTickDelta"+curResource.id).css("color","black");}}}}
function uiShowResourceTooltipClick(event){uiSetHardTooltip(TOOLTIP_TYPE_RESOURCE,event.data.id);}
function uiShowResourceTooltipHover(event){uiSetSoftTooltip(TOOLTIP_TYPE_RESOURCE,event.data.id);}
var COOKIE_NAME="sotb_state";function uiSaveGame(){var data=getSaveStateJson64();clearCookie();setCookie(COOKIE_NAME,data,1000);}
function uiLoadGame(){var data=getCookie(COOKIE_NAME);if(data!=null&&data!=""){try{setSaveStateJson64(data);}
catch(err){}}}
function clearCookie(){setCookie(COOKIE_NAME,"",1000);}
function setCookie(name,value,days){localStorage.setItem(name,value);}
function getCookie(name){return localStorage.getItem(name);}
function uiDisplaySaveState(){var data=getSaveStateJson64();$("#gameStateData").val(data);}
function uiForceLoadSaveState(){var data=$("#gameStateData").val();if(data!=null&&data!=""){try{setSaveStateJson64(data);glChangeSelectedMap(0);}
catch(err){}}}
function uiClearSaveState(){clearCookie();}
function uiLoadSettingModal(){$("#saveSecond").text(TIME_FOR_SAVE/1000);$("#lastSaveTime").text(_lastSaveState.toLocaleString());}
function uiOpenSettingModal(){uiLoadSettingModal();$("#gameStateData").val('');$('#settingModal').modal('show');}
function uiCloseSettingModal(){$('#settingModal').modal('hide');}
function uiDrawSpawn(){var curMap=selectedMapRef;if(curMap.spawnInfo.length>0){$("#spawnSection").show();$("#mapMaxSpawnLevel").text(curMap.spawnInfo.length);document.getElementById("mapLife").innerText=curMap.life;document.getElementById("mapSpawnLevel").innerText=curMap.findSpawnLevel(curMap.spawnCount);document.getElementById("mapMaxSpawnCount").innerText=curMap.maxSpawnCount;if(!selectedMapRef.isSpawning)
$("#spawnButton").prop('disabled',false);else
$("#spawnButton").prop('disabled',true);}
else{$("#spawnSection").hide();}}
function uiOpenSpawnModal(){if(getBuildingFromId(BUILDING_TOWER1).isVisible){$('#spawnInfoModal-button').show();$('#spawnInfoModal-noButton').hide();}
else{$('#spawnInfoModal-button').hide();$('#spawnInfoModal-noButton').show();}
$('#spawnInfoModal').modal('show');}
function uiStartSpawn(){glStartSpawn();$('#spawnInfoModal').modal('hide');}
var TOOLTIP_TYPE_NONE=0;var TOOLTIP_TYPE_CELL=1;var TOOLTIP_TYPE_QUEST=2;var TOOLTIP_TYPE_ACTION=3;var TOOLTIP_TYPE_BUILDING=4;var TOOLTIP_TYPE_MESSAGE=5;var TOOLTIP_TYPE_RESOURCE=6;var currentHardToolTipType=TOOLTIP_TYPE_NONE;var currentHardToolTipInfo=0;var currentSoftToolTipType=TOOLTIP_TYPE_NONE;var currentSoftToolTipInfo=0;function uiSetHardTooltip(toolTipType,info){uiClearTooltip();if(toolTipType==TOOLTIP_TYPE_RESOURCE)uiSetResourceTooltip(info,true);if(toolTipType==TOOLTIP_TYPE_ACTION)uiSetActionTooltip(info,true);if(toolTipType==TOOLTIP_TYPE_BUILDING)uiSetBuildingTooltip(info,true);if(toolTipType==TOOLTIP_TYPE_MESSAGE)uiSetMessageTooltip(info,true);}
function uiSetSoftTooltip(toolTipType,info){uiClearTooltip();if(toolTipType==TOOLTIP_TYPE_RESOURCE)uiSetResourceTooltip(info,false);if(toolTipType==TOOLTIP_TYPE_ACTION)uiSetActionTooltip(info,false);if(toolTipType==TOOLTIP_TYPE_BUILDING)uiSetBuildingTooltip(info,false);if(toolTipType==TOOLTIP_TYPE_MESSAGE)uiSetMessageTooltip(info,false);}
function uiUpdateToolTip(){var toolTipType=currentSoftToolTipType;var toolTipInfo=currentSoftToolTipInfo;if(toolTipType==TOOLTIP_TYPE_NONE){toolTipType=currentHardToolTipType;toolTipInfo=currentHardToolTipInfo;}
if(toolTipType==TOOLTIP_TYPE_CELL)
uiUpdateCellTooltip(toolTipInfo.x,toolTipInfo.y);if(toolTipType==TOOLTIP_TYPE_QUEST)
uiUpdateQuestTooltip(toolTipInfo);if(toolTipType==TOOLTIP_TYPE_ACTION)
uiUpdateActionTooltip(toolTipInfo);if(toolTipType==TOOLTIP_TYPE_BUILDING)
uiUpdateBuildingTooltip(toolTipInfo);if(toolTipType==TOOLTIP_TYPE_RESOURCE)
uiUpdateResourceTooltip(toolTipInfo);}
function uiClearSoftTooltip(){currentSoftToolTipType=TOOLTIP_TYPE_NONE;currentSoftToolTipInfo=0;uiClearTooltip();uiSetHardTooltip(currentHardToolTipType,currentHardToolTipInfo);}
function uiClearTooltip(){var toolTipType=currentSoftToolTipType;if(toolTipType==TOOLTIP_TYPE_NONE){toolTipType=currentHardToolTipType;}
if(toolTipType!=TOOLTIP_TYPE_CELL)$("#toolTipCell").hide();if(toolTipType!=TOOLTIP_TYPE_QUEST)$("#toolTipQuest").hide();if(toolTipType!=TOOLTIP_TYPE_BUILDING)$("#toolTipBuilding").hide();if(toolTipType!=TOOLTIP_TYPE_ACTION)$("#toolTipAction").hide();if(toolTipType!=TOOLTIP_TYPE_MESSAGE)$("#toolTipMessage").hide();if(toolTipType!=TOOLTIP_TYPE_RESOURCE)$("#toolTipResource").hide();if(toolTipType==TOOLTIP_TYPE_CELL)$("#toolTipCell").show();if(toolTipType==TOOLTIP_TYPE_QUEST)$("#toolTipQuest").show();if(toolTipType==TOOLTIP_TYPE_BUILDING)$("#toolTipBuilding").show();if(toolTipType==TOOLTIP_TYPE_ACTION)$("#toolTipAction").show();if(toolTipType==TOOLTIP_TYPE_MESSAGE)$("#toolTipMessage").show();if(toolTipType==TOOLTIP_TYPE_RESOURCE)$("#toolTipResource").show();}
function uiSetActionTooltip(actionId,isHard){if(isHard){currentHardToolTipType=TOOLTIP_TYPE_ACTION;currentHardToolTipInfo=actionId;currentSoftToolTipType=TOOLTIP_TYPE_NONE;currentSoftToolTipInfo=0;}
else{currentSoftToolTipType=TOOLTIP_TYPE_ACTION;currentSoftToolTipInfo=actionId;}
uiClearTooltip();if(actionId==ACTION_CLICK){$("#toolTipAction_name").text("Click");$("#toolTipAction_description").text("Click on a cell to select. View properties, quests and execute actions.");}
else if(actionId==ACTION_UPGRADE){$("#toolTipAction_name").text("Upgrade");$("#toolTipAction_description").text("Click on a cell to upgrade the building.");}
else if(actionId==ACTION_DOWNGRADE){$("#toolTipAction_name").text("Downgrade");$("#toolTipAction_description").text("Click on a cell to downgrade the building. All resources will be given back.");}
else if(actionId==ACTION_DESTROY){$("#toolTipAction_name").text("Destroy");$("#toolTipAction_description").text("Click on a cell to destroy the building. All resources will be given back.");}
uiUpdateActionTooltip(actionId);}
function uiUpdateActionTooltip(actionId){$("#toolTipAction").show();}
function uiSetBuildingTooltip(buildingInfo,isHard){if(isHard){currentHardToolTipType=TOOLTIP_TYPE_BUILDING;currentHardToolTipInfo=buildingInfo;currentSoftToolTipType=TOOLTIP_TYPE_NONE;currentSoftToolTipInfo=0;}
else{currentSoftToolTipType=TOOLTIP_TYPE_BUILDING;currentSoftToolTipInfo=buildingInfo;}
uiClearTooltip();var curBuilding=getBuildingFromId(buildingInfo.buildingId);$("#toolTipBuilding_name").text(curBuilding.name);$("#toolTipBuilding_description").text(curBuilding.description);uiUpdateBuildingTooltip(buildingInfo);}
function uiUpdateBuildingTooltip(buildingInfo){var curBuilding=getBuildingFromId(buildingInfo.buildingId);if(buildingInfo.level==0){$("#toolTipBuilding_costRow").show();$("#toolTipBuilding_cost").html(dataLinksToStringOneAvailableLine(curBuilding.getBuildCost()));$("#toolTipBuilding_costName").text("Cost: ");if(curBuilding.getRequirement(buildingInfo.level).length>0&&!curBuilding.canSpawn){$("#toolTipBuilding_reqRow").show();$("#toolTipBuilding_req").html(dataLinksToStringOneLine(curBuilding.getRequirement(1)));}
else
$("#toolTipBuilding_reqRow").hide();if(curBuilding.getReward(buildingInfo.level).length>0&&!curBuilding.canSpawn){$("#toolTipBuilding_rewRow").show();$("#toolTipBuilding_rew").html(dataLinksToStringOneLine(curBuilding.getReward(1)));}
else
$("#toolTipBuilding_rewRow").hide();}
else if(curBuilding.canUpgrade){$("#toolTipBuilding_costRow").show();$("#toolTipBuilding_cost").html(dataLinksToStringOneAvailableLine(curBuilding.getUpgradeCost(buildingInfo.level)));$("#toolTipBuilding_costName").text("Upgrade Cost: ");if(curBuilding.getRequirement(buildingInfo.level).length>0){$("#toolTipBuilding_reqRow").show();$("#toolTipBuilding_req").html(dataLinksToStringOneLine(curBuilding.getRequirement(buildingInfo.level)));}
else
$("#toolTipBuilding_reqRow").hide();if(curBuilding.getReward(buildingInfo.level).length>0){$("#toolTipBuilding_rewRow").show();$("#toolTipBuilding_rew").html(dataLinksToStringOneLine(curBuilding.getReward(buildingInfo.level)));}
else
$("#toolTipBuilding_rewRow").hide();}
else{$("#toolTipBuilding_costRow").hide();$("#toolTipBuilding_reqRow").hide();$("#toolTipBuilding_rewRow").hide();}
$("#toolTipBuilding").show();}
function uiSetCellTooltip(x,y){currentHardToolTipType=TOOLTIP_TYPE_CELL;currentHardToolTipInfo={x:x,y:y};uiClearTooltip();var curMap=selectedMapRef;var curCell=curMap.cells[x+(y*MAP_WIDTH)];var curState=curCell.getStateRef();if(curCell.buildingInstance!=null){$("#toolTipCell_cavePlaceHolder").hide();uiSetBuildingTooltip({buildingId:curCell.buildingInstance.buildingId,level:curCell.buildingInstance.level},true);}
else if(curState.questId>=0){$("#toolTipCell_cavePlaceHolder").hide();uiSetQuestTooltip(curState.questId);}
else{$("#toolTipCell_name").text(curState.name);$("#toolTipCell_type").text(getCellStateTypeName(curState.typeId));if(curState.mapId>0)
$("#toolTipCell_cavePlaceHolder").show();else
$("#toolTipCell_cavePlaceHolder").hide();if(curState.description==null||curState.description==undefined)
$("#toolTipCell_description").text("");else
$("#toolTipCell_description").text(curState.description);uiUpdateCellTooltip(x,y);}}
function uiUpdateCellTooltip(x,y){var curMap=selectedMapRef;var curCell=curMap.cells[x+(y*MAP_WIDTH)];var curState=curCell.getStateRef();if(curState.questId>=0){uiUpdateQuestTooltip(curState.questId);}
else if(curCell.buildingInstance!=null){uiUpdateBuildingTooltip({buildingId:curCell.buildingInstance.buildingId,level:curCell.buildingInstance.level});}
else{$("#toolTipCell").show();}}
function uiSetQuestTooltip(questId){currentHardToolTipType=TOOLTIP_TYPE_QUEST;currentHardToolTipInfo=questId;uiClearTooltip();var curQuest=getQuestFromId(questId);$("#toolTipQuest_name").text(curQuest.title);uiUpdateQuestTooltip(questId);}
function uiUpdateQuestTooltip(questId){var curQuest=getQuestFromId(questId);if(curQuest.completed){$("#toolTipQuest_description").text(curQuest.endSummary);$("#completeQuest").hide();$("#toolTipQuest_requirementRow").hide();$("#toolTipQuest_completed").show();}
else{$("#toolTipQuest_description").text(curQuest.startSummary);$("#completeQuest").show();$("#toolTipQuest_requirementRow").show();$("#toolTipQuest_completed").hide();if(hasDataLinks(curQuest.requirements))
$("#completeQuest").prop('disabled',false);else
$("#completeQuest").prop('disabled',true);}
$("#toolTipQuest_requirement").html(dataLinksToStringOneLine(curQuest.requirements));$("#toolTipQuest").show();}
function uiSetResourceTooltip(resourceId,isHard){if(isHard){currentHardToolTipType=TOOLTIP_TYPE_RESOURCE;currentHardToolTipInfo=resourceId;currentSoftToolTipType=TOOLTIP_TYPE_NONE;currentSoftToolTipInfo=0;}
else{currentSoftToolTipType=TOOLTIP_TYPE_RESOURCE;currentSoftToolTipInfo=resourceId;}
uiClearTooltip();var curResource=getResourceFromId(resourceId);$("#toolTipResource_name").text(curResource.name);$("#toolTipResource_description").text(curResource.description);uiUpdateResourceTooltip(resourceId);}
function uiUpdateResourceTooltip(resourceId){var curResource=getResourceFromId(resourceId);$("#toolTipResource_amount").text(nComaFormatter(curResource.amount));$("#toolTipResource").show();}
function uiSetMessageTooltip(message,isHard){if(isHard){currentHardToolTipType=TOOLTIP_TYPE_MESSAGE;currentHardToolTipInfo=message;currentSoftToolTipType=TOOLTIP_TYPE_NONE;currentSoftToolTipInfo=0;}
else{currentSoftToolTipType=TOOLTIP_TYPE_MESSAGE;currentSoftToolTipInfo=message;}
uiClearTooltip();$("#messageInnerText").html(message);uiUpdateTooltip(message);}
function uiUpdateTooltip(message){$("#toolTipMessage").show();}
function uiInitWorldMap(){var data="";data+="<table border=\"0\" style=\"border-collapse: collapse;\">";for(var y=0;y<mainWorld.height;y++){data+="<tr>";for(var x=0;x<mainWorld.width;x++){data+="<td>";var map=mainWorld.mapRefs[x+(y*mainWorld.width)];if(map!=null){data+="<div onclick=\"javascript: uiSetSelectedMap("+map.id+");\" id=\"map"+map.id+"\" class=\"testHover\" style=\"width: 66px; height: 66px;\">"+getImageDiv(map.imageRef.info[0])+"</div>";}
data+="</td>";}
data+="</tr>";}
data+="</table>";$("#fullMap").html(data);$("#movementUp").append(getImageDiv(getImageFromName("icon_arrow_up").info[0]));$("#movementUpOff").append(getImageDiv(getImageFromName("icon_arrow_up_off").info[0]));$("#movementLeft").append(getImageDiv(getImageFromName("icon_arrow_left").info[0]));$("#movementLeftOff").append(getImageDiv(getImageFromName("icon_arrow_left_off").info[0]));$("#movementDown").append(getImageDiv(getImageFromName("icon_arrow_down").info[0]));$("#movementDownOff").append(getImageDiv(getImageFromName("icon_arrow_down_off").info[0]));$("#movementRight").append(getImageDiv(getImageFromName("icon_arrow_right").info[0]));$("#movementRightOff").append(getImageDiv(getImageFromName("icon_arrow_right_off").info[0]));}
function uiDrawWorldMap(){for(var t=0;t<mainWorld.mapInfo.length;t++){var m=mainWorld.mapInfo[t].mapRef;if(m.active)
$("#map"+m.id).show();else
$("#map"+m.id).hide();}
var possibleMovement=mainWorld.getPosibleMovement(selectedMapId);if(possibleMovement==0){$("#mapMovement").hide();}
else if(possibleMovement==-1){$("#mapMovement").show();$("#mapMovement_arrow").hide();$("#mapMovement_exitCave").show();}
else{$("#mapMovement").show();$("#mapMovement_arrow").show();$("#mapMovement_exitCave").hide();if((possibleMovement&1)>0){$("#movementUp").show();$("#movementUpOff").hide();}
else{$("#movementUp").hide();$("#movementUpOff").show();}
if((possibleMovement&2)>0){$("#movementLeft").show();$("#movementLeftOff").hide();}
else{$("#movementLeft").hide();$("#movementLeftOff").show();}
if((possibleMovement&4)>0){$("#movementRight").show();$("#movementRightOff").hide();}
else{$("#movementRight").hide();$("#movementRightOff").show();}
if((possibleMovement&8)>0){$("#movementDown").show();$("#movementDownOff").hide();}
else{$("#movementDown").hide();$("#movementDownOff").show();}}
if(getActiveMapCount()<=1)
$("#mapTab").hide();else
$("#mapTab").show();}
function uiSetSelectedMap(newMapId){glChangeSelectedMap(newMapId);clearRunningAnimation();$('#myTab a[href="#map"]').tab('show');}
function uiMoveMap(x,y){var nx,ny;var found=false;for(var t=0;t<mainWorld.mapInfo.length;t++){if(mainWorld.mapInfo[t].mapId==selectedMapId){found=true;nx=mainWorld.mapInfo[t].x+x;ny=mainWorld.mapInfo[t].y+y;}}
if(found){for(var t=0;t<mainWorld.mapInfo.length;t++){if(mainWorld.mapInfo[t].x==nx&&mainWorld.mapInfo[t].y==ny){var newMap=mainWorld.mapInfo[t].mapRef;if(newMap.active)
uiSetSelectedMap(newMap.id);}}}}
var _outsideOfCave;function uiEnterCave(){var curMap=selectedMapRef;var curCell=curMap.cells[currentHardToolTipInfo.x+(currentHardToolTipInfo.y*MAP_WIDTH)];var curState=curCell.getStateRef();_outsideOfCave=curMap.id;if(curState.mapId>=0)
uiSetSelectedMap(curState.mapId);}
function uiExitCave(){uiSetSelectedMap(_outsideOfCave);}
var enemyData=[{"id":0,"n":"Slime","en":"","bl":5,"ms":500,"im":"enemy_slime","d":""},{"id":1,"n":"Worm","en":"","bl":15,"ms":1000,"im":"enemy_worm","d":""},{"id":2,"n":"Fire Slime","en":"","bl":5,"ms":1000,"im":"enemy_fire_slime","d":""},{"id":3,"n":"Bunny","en":"","im":"enemy_bunny","bl":10,"ms":500,"d":""},{"id":4,"n":"Demon","en":"","im":"enemy_demon","bl":5,"ms":1000,"d":""},{"id":5,"n":"Blue Slime","en":"","im":"enemy_slime_blue","bl":15,"ms":1000,"d":""},{"id":6,"n":"Red Slime","en":"","im":"enemy_slime_red","bl":5,"ms":1000,"d":""},{"id":7,"n":"Spider","en":"","im":"enemy_spider","bl":25,"ms":1000,"d":""}];var resourceData=[{"id":0,"n":"Wood","en":"","d":"","ah":false,"is":false,"sm":"-1"},{"id":1,"n":"Stone","en":"","d":"","ah":false,"is":false,"sm":"-1"},{"id":2,"n":"Damage","en":"","d":"Filler resource for tower","ah":true,"is":false,"sm":"-1"},{"id":3,"n":"Death","en":"","d":"","ah":true,"is":false,"sm":"-1"},{"id":4,"n":"Flower","en":"","d":"","ah":false,"is":false,"sm":"-1"},{"id":5,"n":"Fish","en":"","d":"","ah":false,"is":false,"sm":"-1"},{"id":6,"n":"Plank","en":"","d":"","ah":false,"is":false,"sm":"-1"},{"id":7,"n":"Coal","en":"","d":"","ah":false,"is":false,"sm":"-1"},{"id":8,"n":"Block","en":"","d":"","ah":false,"is":false,"sm":"-1"},{"id":9,"n":"Fruit","en":"","d":"","ah":false,"is":false,"sm":"-1"},{"id":10,"n":"Iron Ore","en":"","d":"","ah":false,"is":false,"sm":"-1"},{"id":11,"n":"Iron","en":"","d":"","ah":false,"is":false,"sm":"-1"},{"id":12,"n":"Steal","en":"","d":"","ah":false,"is":false,"sm":"-1"},{"id":13,"n":"Wheat","en":"","d":"","ah":false,"is":false,"sm":"-1"},{"id":14,"n":"Cookie","en":"","d":"","ah":false,"is":true,"sm":"5000000"},{"id":15,"n":"Crow Bar","en":"Special","d":"","ah":false,"is":true,"sm":"1"},{"id":16,"n":"Water","en":"","d":"","ah":false,"is":false,"sm":"-1"},{"id":17,"n":"Drill Power","en":"","d":"","ah":false,"is":true,"sm":"200000"},{"id":18,"n":"Impossible Resource","en":"","d":"","ah":false,"is":false,"sm":"-1"},{"id":19,"n":"Drill Part","en":"","d":"","ah":false,"is":true,"sm":"1"}];var cellStateData=[{"id":0,"n":"Grass","en":"","ty":3,"ep":false,"epe":false,"ca":-1,"qu":-1,"ib":-1,"atf":-1,"att":-1,"csc":-1,"tsc":-1,"qsc":-1,"ec":false,"fi":"_grass","oi":"","ei":"","d":"","ma":null},{"id":1,"n":"Forest","en":"","ty":2,"ep":false,"epe":false,"ca":0,"qu":-1,"ib":-1,"atf":-1,"att":-1,"csc":-1,"tsc":-1,"qsc":-1,"ec":false,"fi":"_grass","oi":"_tree","ei":"","d":""},{"id":2,"n":"Mountain","en":"","ty":1,"ep":false,"epe":false,"ca":1,"qu":-1,"ib":-1,"atf":-1,"att":-1,"csc":-1,"tsc":-1,"qsc":-1,"ec":false,"fi":"_grass","oi":"_mountain","ei":"","d":""},{"id":3,"n":"Path","en":"","ty":0,"ep":true,"epe":false,"ca":-1,"qu":-1,"ib":-1,"atf":-1,"att":-1,"csc":-1,"tsc":-1,"qsc":-1,"ec":false,"fi":"_path","oi":"","ei":"","d":""},{"id":4,"n":"Grass Crystal From","en":"","ty":0,"ep":true,"epe":false,"ca":-1,"qu":-1,"ib":6,"atf":-1,"att":-1,"csc":-1,"tsc":-1,"qsc":-1,"ec":false,"fi":"_grass","oi":"","ei":"_crystal","d":""},{"id":5,"n":"Grass Crystal To","en":"","ty":0,"ep":true,"epe":false,"ca":-1,"qu":-1,"ib":7,"atf":-1,"att":-1,"csc":-1,"tsc":-1,"qsc":-1,"ec":false,"fi":"_grass","oi":"","ei":"_crystal2","d":""},{"id":6,"n":"Water","en":"","ty":4,"ep":false,"epe":false,"ca":-1,"qu":-1,"ib":-1,"atf":-1,"att":-1,"csc":-1,"tsc":-1,"qsc":-1,"ec":false,"fi":"_water","oi":"","ei":"","d":""},{"id":7,"n":"Grass Flower","en":"","ty":3,"ep":false,"epe":false,"ca":2,"qu":-1,"ib":-1,"atf":-1,"att":-1,"csc":14,"tsc":-1,"qsc":-1,"ec":false,"fi":"_grass","oi":"_flower","ei":"","d":""},{"id":8,"n":"Fisherman","en":"","ty":0,"ep":false,"epe":false,"ca":-1,"qu":1,"ib":-1,"atf":-1,"att":-1,"csc":-1,"tsc":-1,"qsc":-1,"ec":false,"fi":"_grass","oi":"_fisherman","ei":"","d":"","ma":null},{"id":9,"n":"Port","en":"","ty":0,"ep":false,"epe":false,"ca":-1,"qu":0,"ib":-1,"atf":-1,"att":-1,"csc":-1,"tsc":-1,"qsc":59,"ec":false,"fi":"_water","oi":"_port","ei":"","d":"","ma":null},{"id":10,"n":"Water","en":"Fish","ty":0,"ep":false,"epe":false,"ca":-1,"qu":-1,"ib":-1,"atf":30000,"att":300000,"csc":-1,"tsc":11,"qsc":-1,"ec":false,"fi":"_water","oi":"","ei":"_fish","d":"","ma":null},{"id":11,"n":"Fish","en":"","ty":0,"ep":false,"epe":false,"ca":3,"qu":-1,"ib":-1,"atf":-1,"att":-1,"csc":10,"tsc":-1,"qsc":-1,"ec":false,"fi":"_water","oi":"_fish","ei":"","d":""},{"id":12,"n":"Man Standing","en":"","ty":0,"ep":false,"epe":false,"ca":-1,"qu":2,"ib":-1,"atf":-1,"att":-1,"csc":-1,"tsc":-1,"qsc":-1,"ec":false,"fi":"_grass","oi":"_standing","ei":"","d":"","ma":null},{"id":13,"n":"City","en":"","ty":0,"ep":false,"epe":false,"ca":-1,"qu":3,"ib":-1,"atf":-1,"att":-1,"csc":-1,"tsc":-1,"qsc":-1,"ec":false,"fi":"_grass","oi":"_house","ei":"","d":"","ma":null},{"id":14,"n":"No flower","en":"","ty":0,"ep":false,"epe":false,"ca":-1,"qu":-1,"ib":-1,"atf":30000,"att":60000,"csc":-1,"tsc":7,"qsc":-1,"ec":false,"fi":"_grass","oi":"_floweroff","ei":"","d":"Flower will grow back over time."},{"id":15,"n":"Pillar","en":"","ty":0,"ep":false,"epe":false,"ca":-1,"qu":-1,"ib":-1,"atf":-1,"att":-1,"csc":-1,"tsc":-1,"qsc":-1,"ec":false,"fi":"_grass","oi":"_pillar","ei":""},{"id":16,"n":"Broken Bridge","en":"","ty":0,"ep":false,"epe":false,"ca":-1,"qu":4,"ib":-1,"atf":-1,"att":-1,"csc":-1,"tsc":-1,"qsc":17,"ec":false,"fi":"_bridge_broken","oi":"","ei":"","d":"","ma":null},{"id":17,"n":"Fix Bridge","en":"","ty":0,"ep":false,"epe":false,"ca":-1,"qu":-1,"ib":-1,"atf":-1,"att":-1,"csc":-1,"tsc":-1,"qsc":-1,"ec":false,"fi":"_bridge_fix","oi":"","ei":""},{"id":18,"n":"Carpenter","en":"","ty":0,"ep":false,"epe":false,"ca":-1,"qu":4,"ib":-1,"atf":-1,"att":-1,"csc":-1,"tsc":-1,"qsc":-1,"ec":false,"fi":"_grass","oi":"_standing","ei":""},{"id":19,"n":"Port City","en":"","ty":0,"ep":false,"epe":false,"ca":-1,"qu":5,"ib":-1,"atf":-1,"att":-1,"csc":-1,"tsc":-1,"qsc":-1,"ec":false,"fi":"_grass","oi":"_house","ei":"","d":"","ma":null},{"id":20,"n":"Road Helper","en":"","ty":0,"ep":false,"epe":false,"ca":-1,"qu":6,"ib":-1,"atf":-1,"att":-1,"csc":-1,"tsc":-1,"qsc":-1,"ec":false,"fi":"_grass","oi":"_person","ei":"","d":"","ma":null},{"id":21,"n":"Lava Path","en":"","ty":0,"ep":true,"epe":false,"ca":-1,"qu":-1,"ib":-1,"atf":-1,"att":-1,"csc":-1,"tsc":-1,"qsc":-1,"ec":true,"fi":"_lavapath","oi":"","ei":"","d":"","ma":null},{"id":22,"n":"Volcano","en":"","ty":0,"ep":false,"epe":false,"ca":-1,"qu":-1,"ib":-1,"atf":-1,"att":-1,"csc":-1,"tsc":-1,"qsc":-1,"ec":true,"fi":"_path","oi":"_volcano","ei":""},{"id":23,"n":"Deep Water","en":"","ty":4,"ep":false,"epe":false,"ca":-1,"qu":-1,"ib":-1,"atf":-1,"att":-1,"csc":-1,"tsc":-1,"qsc":-1,"ec":false,"fi":"_deepwater","oi":"","ei":""},{"id":24,"n":"Stream","en":"","ty":0,"ep":false,"epe":false,"ca":-1,"qu":-1,"ib":-1,"atf":-1,"att":-1,"csc":-1,"tsc":-1,"qsc":-1,"ec":false,"fi":"_stream","oi":"","ei":""},{"id":25,"n":"Pickaxe Man","en":"","ty":0,"ep":false,"epe":false,"ca":-1,"qu":7,"ib":-1,"atf":-1,"att":-1,"csc":-1,"tsc":-1,"qsc":-1,"ec":false,"fi":"_grass","oi":"_pickaxeman","ei":"","d":"","ma":null},{"id":26,"n":"Mountain Hole","en":"","ty":0,"ep":false,"epe":false,"ca":-1,"qu":-1,"ib":-1,"atf":-1,"att":-1,"csc":-1,"tsc":-1,"qsc":-1,"ec":false,"fi":"_grass","oi":"_mountainhole","ei":"","d":"","ma":12},{"id":27,"n":"Grass Bush","en":"","ty":0,"ep":false,"epe":false,"ca":4,"qu":-1,"ib":-1,"atf":-1,"att":-1,"csc":28,"tsc":-1,"qsc":-1,"ec":false,"fi":"_grass","oi":"_bush_on","ei":""},{"id":28,"n":"No bush","en":"","ty":0,"ep":false,"epe":false,"ca":-1,"qu":-1,"ib":-1,"atf":30000,"att":60000,"csc":-1,"tsc":27,"qsc":-1,"ec":false,"fi":"_grass","oi":"_bush_off","ei":"","d":"Fruit will grow back over time."},{"id":29,"n":"Path End","en":"","ty":0,"ep":true,"epe":true,"ca":-1,"qu":-1,"ib":-1,"atf":-1,"att":-1,"csc":-1,"tsc":-1,"qsc":-1,"ec":false,"fi":"_path","oi":"","ei":"_crystal2"},{"id":30,"n":"Boulder","en":"","d":"","ty":0,"fi":"_grass","oi":"_boulder","ei":"","ep":false,"epe":false,"ca":-1,"qu":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false},{"id":31,"n":"Barrier","en":"","d":"","ty":0,"fi":"_grass","oi":"_fence","ei":"","ep":false,"epe":false,"ca":-1,"qu":14,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":0,"ec":false,"ma":null},{"id":32,"n":"Second Port","en":"","d":"","ty":0,"fi":"_grass","oi":"_house","ei":"","ep":false,"epe":false,"ca":-1,"qu":14,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false,"ma":null},{"id":33,"n":"Construction","en":"","d":"This area has not been built yet.","ty":0,"fi":"_grass","oi":"_construction","ei":"","ep":false,"epe":false,"ca":-1,"qu":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false},{"id":34,"n":"Sad Sign","en":"","d":"There's nothing here. There's nothing beyond this point.","ty":0,"fi":"_grass","oi":"_sad_sign","ei":"","ep":false,"epe":false,"ca":-1,"qu":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false},{"id":35,"n":"Water Stream","en":"V","d":"","ty":0,"fi":"_water_stream_v","oi":"","ei":"","ep":false,"epe":false,"ca":-1,"qu":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false},{"id":36,"n":"Water Stream","en":"H","d":"","ty":0,"fi":"_water_stream_h","oi":"","ei":"","ep":false,"epe":false,"ca":-1,"qu":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false},{"id":37,"n":"Wheat","en":"On","d":"","ty":0,"fi":"_grass","oi":"_wheat_on","ei":"","ep":false,"epe":false,"ca":5,"qu":-1,"ib":-1,"atf":0,"att":0,"csc":38,"tsc":-1,"qsc":-1,"ec":false,"ma":null},{"id":38,"n":"Wheat","en":"Off","d":"","ty":0,"fi":"_grass","oi":"_wheat_off","ei":"","ep":false,"epe":false,"ca":-1,"qu":-1,"ib":-1,"atf":30000,"att":60000,"csc":-1,"tsc":37,"qsc":-1,"ec":false},{"id":39,"n":"Old Lady","en":"Cookie","d":"","ty":0,"fi":"_cave_floor","oi":"_oldwoman","ei":"","ep":false,"epe":false,"ca":-1,"qu":9,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false,"ma":null},{"id":40,"n":"Cookie Factory","en":"","d":"","ty":0,"fi":"_cave_floor","oi":"_cookiefactory","ei":"","ep":false,"epe":false,"ca":-1,"qu":-1,"ib":14,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false,"ma":null},{"id":41,"n":"Stone Bridge Village","en":"","d":"","ty":0,"fi":"_grass","oi":"_house","ei":"","ep":false,"epe":false,"ca":-1,"qu":29,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false,"ma":-1},{"id":42,"n":"Stone Bridge Broken","en":"","d":"","ty":0,"fi":"_water","oi":"_stone_bridge_off","ei":"","ep":false,"epe":false,"ca":-1,"qu":10,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":43,"ec":false,"ma":null},{"id":43,"n":"Stone Bridge Fix","en":"","d":"","ty":0,"fi":"_water","oi":"_stone_bridge_on","ei":"","ep":false,"epe":false,"ca":-1,"qu":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false,"ma":null},{"id":44,"n":"Snow","en":"","d":"","ty":3,"fi":"_snow","oi":"","ei":"","ep":false,"epe":false,"ca":-1,"qu":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false},{"id":45,"n":"Swamp","en":"","d":"","ty":0,"fi":"_poison","oi":"","ei":"","ep":false,"epe":false,"ca":-1,"qu":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false},{"id":46,"n":"Ice","en":"","d":"","ty":0,"fi":"_ice","oi":"","ei":"","ep":false,"epe":false,"ca":-1,"qu":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false},{"id":47,"n":"Cave Floor","en":"","d":"","ty":3,"fi":"_cave_floor","oi":"","ei":"","ep":false,"epe":false,"ca":-1,"qu":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false,"ma":null},{"id":48,"n":"Cave Wall","en":"","d":"","ty":0,"fi":"_cave_floor","oi":"_stalagmite","ei":"","ep":false,"epe":false,"ca":-1,"qu":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false,"ma":null},{"id":49,"n":"Farm","en":"","d":"","ty":0,"fi":"_grass","oi":"_farm","ei":"","ep":false,"epe":false,"ca":-1,"qu":-1,"ma":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false},{"id":50,"n":"Sand","en":"","d":"","ty":0,"fi":"_sand","oi":"","ei":"","ep":false,"epe":false,"ca":-1,"qu":-1,"ma":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false},{"id":51,"n":"Broken Well","en":"","d":"","ty":0,"fi":"_grass","oi":"_well_broken","ei":"","ep":false,"epe":false,"ca":-1,"qu":8,"ma":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":52,"ec":false},{"id":52,"n":"Fixed Well","en":"","d":"","ty":0,"fi":"_grass","oi":"_well","ei":"","ep":false,"epe":false,"ca":-1,"qu":-1,"ma":-1,"ib":-1,"atf":60000,"att":300000,"csc":-1,"tsc":58,"qsc":-1,"ec":false},{"id":53,"n":"Mountain Hole Blocked","en":"","d":"","ty":0,"fi":"_grass","oi":"_mountainholeblocked","ei":"","ep":false,"epe":false,"ca":-1,"qu":11,"ma":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":26,"ec":false},{"id":54,"n":"Flower Lady","en":"","d":"","ty":0,"fi":"_grass","oi":"_woman_3","ei":"","ep":false,"epe":false,"ca":-1,"qu":12,"ma":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false},{"id":55,"n":"Swamp Guardian","en":"","d":"","ty":0,"fi":"_grass","oi":"_man_1","ei":"","ep":false,"epe":false,"ca":-1,"qu":24,"ma":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false},{"id":56,"n":"Crane","en":"","d":"","ty":0,"fi":"_grass","oi":"_crane","ei":"","ep":false,"epe":false,"ca":-1,"qu":-1,"ma":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false},{"id":57,"n":"Crane Operator","en":"","d":"","ty":0,"fi":"_grass","oi":"_man_2","ei":"","ep":false,"epe":false,"ca":-1,"qu":16,"ma":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false},{"id":58,"n":"Well with water","en":"","d":"","ty":0,"fi":"_grass","oi":"_wellwater","ei":"","ep":false,"epe":false,"ca":6,"qu":-1,"ma":-1,"ib":-1,"atf":0,"att":0,"csc":52,"tsc":-1,"qsc":-1,"ec":false},{"id":59,"n":"Water port with boat","en":"","d":"","ty":0,"fi":"_port_boat","oi":"","ei":"","ep":false,"epe":false,"ca":-1,"qu":-1,"ma":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false},{"id":60,"n":"Port 2","en":"","d":"","ty":0,"fi":"_port2","oi":"","ei":"","ep":false,"epe":false,"ca":-1,"qu":-1,"ma":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false},{"id":61,"n":"Block Building","en":"","d":"","ty":0,"fi":"_grass","oi":"_blocktable","ei":"","ep":false,"epe":false,"ca":-1,"qu":-1,"ma":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false},{"id":62,"n":"Broken Farm","en":"","d":"","ty":0,"fi":"_grass","oi":"_farmbroken","ei":"","ep":false,"epe":false,"ca":-1,"qu":13,"ma":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":49,"ec":false},{"id":63,"n":"South Village","en":"","d":"","ty":0,"fi":"_grass","oi":"_house","ei":"","ep":false,"epe":false,"ca":-1,"qu":15,"ma":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false},{"id":64,"n":"Desert Gardian","en":"","d":"","ty":0,"fi":"_sand","oi":"_man_3","ei":"","ep":false,"epe":false,"ca":-1,"qu":23,"ma":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false},{"id":65,"n":"Fence 2","en":"","d":"","ty":0,"fi":"_grass","oi":"_fence","ei":"","ep":false,"epe":false,"ca":-1,"qu":17,"ma":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":0,"ec":false},{"id":66,"n":"Water lady","en":"","d":"","ty":0,"fi":"_grass","oi":"_lady_a","ei":"","ep":false,"epe":false,"ca":-1,"qu":17,"ma":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false},{"id":67,"n":"Coal Person","en":"","d":"","ty":0,"fi":"_grass","oi":"_standing","ei":"","ep":false,"epe":false,"ca":-1,"qu":20,"ma":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false},{"id":68,"n":"Coal Village","en":"","d":"","ty":0,"fi":"_grass","oi":"_house","ei":"","ep":false,"epe":false,"ca":-1,"qu":19,"ma":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false},{"id":69,"n":"Coal Well Broken","en":"","d":"","ty":0,"fi":"_grass","oi":"_well_broken","ei":"","ep":false,"epe":false,"ca":-1,"qu":18,"ma":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":52,"ec":false},{"id":70,"n":"Broken Drill","en":"","d":"","ty":0,"fi":"_grass","oi":"_drillbroken","ei":"","ep":false,"epe":false,"ca":-1,"qu":21,"ma":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":71,"ec":false},{"id":71,"n":"Fixed Drill","en":"","d":"","ty":0,"fi":"_grass","oi":"","ei":"","ep":false,"epe":false,"ca":-1,"qu":22,"ma":-1,"ib":16,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":0,"ec":false},{"id":72,"n":"Rock To Brake","en":"","d":"","ty":0,"fi":"_grass","oi":"_boulder","ei":"","ep":false,"epe":false,"ca":-1,"qu":22,"ma":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":0,"ec":false},{"id":73,"n":"Engineer","en":"","d":"","ty":0,"fi":"_grass","oi":"_man_3","ei":"","ep":false,"epe":false,"ca":-1,"qu":27,"ma":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false},{"id":74,"n":"Snow Guardian","en":"","d":"","ty":0,"fi":"_grass","oi":"_man_2","ei":"","ep":false,"epe":false,"ca":-1,"qu":25,"ma":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false},{"id":75,"n":"Mountain Path","en":"","d":"","ty":0,"fi":"_grass","oi":"_mountainpath","ei":"","ep":false,"epe":false,"ca":-1,"qu":-1,"ma":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false},{"id":76,"n":"Volcano Guardian","en":"","d":"","ty":0,"fi":"_grass","oi":"_man_3","ei":"","ep":false,"epe":false,"ca":-1,"qu":26,"ma":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false},{"id":77,"n":"Lava","en":"","d":"","ty":0,"fi":"_lava","oi":"","ei":"","ep":false,"epe":false,"ca":-1,"qu":-1,"ma":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":true},{"id":78,"n":"Stream Vertical","en":"","d":"","ty":0,"fi":"_streamv","oi":"","ei":"","ep":false,"epe":false,"ca":-1,"qu":-1,"ma":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false},{"id":79,"n":"Broken Iron Bridge","en":"","d":"","ty":0,"fi":"_bridge_broken","oi":"","ei":"","ep":false,"epe":false,"ca":-1,"qu":28,"ma":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":80,"ec":false},{"id":80,"n":"Fixed Iron Bridge","en":"","d":"","ty":0,"fi":"_bridge_fix","oi":"","ei":"","ep":false,"epe":false,"ca":-1,"qu":-1,"ma":-1,"ib":-1,"atf":0,"att":0,"csc":-1,"tsc":-1,"qsc":-1,"ec":false}];var mapData=[{"id":0,"n":"Start","en":"","c":[6,0,2,2,2,2,0,0,0,0,1,6,6,2,2,1,0,0,0,0,0,0,6,6,6,6,2,0,0,0,0,0,0,6,6,6,6,6,0,1,0,0,0,1,0,6,6,23,6,6,0,0,0,0,0,0,6,6,6,23,6,6,6,0,0,0,0,0,6,6,23,23,6,6,6,6,0,0,0,0,6,6,23,23,0,6,6,6,0,0,0,1,6,6,23,23,0,0,6,6,0,0,0,0,6,6,23,23,0,0,6,6,0,13,20,0,6,6,23,23,15,0,0,6,6,6,6,6,6,6,23,23,6,6,6,6,6,6,6,6,6,23,23,23],"d":"","sp":[]},{"id":1,"n":"Second","en":"","c":[2,2,2,2,1,0,0,0,12,0,0,6,2,2,2,0,0,0,4,0,0,0,0,6,2,2,2,0,0,0,3,0,0,7,0,6,2,2,1,0,0,3,3,0,7,0,6,10,2,0,0,0,0,3,0,0,0,0,6,6,1,0,0,0,0,3,0,0,0,6,6,6,0,0,3,3,3,3,3,29,19,9,10,6,0,0,3,0,0,3,0,0,0,0,6,6,0,0,3,0,3,3,0,0,0,0,8,6,0,0,3,3,3,0,0,0,0,0,0,6,0,0,0,0,0,27,27,27,0,0,6,10,6,0,0,0,27,27,27,27,27,0,0,6],"d":"","sp":[{"d":1000,"e":0,"l":1,"c":10},{"d":1000,"e":1,"l":1,"c":1},{"d":1000,"e":0,"l":2,"c":10},{"d":1000,"e":1,"l":2,"c":1},{"d":1000,"e":0,"l":3,"c":10},{"d":1000,"e":1,"l":3,"c":1},{"d":1000,"e":0,"l":4,"c":10},{"d":1000,"e":1,"l":4,"c":1},{"d":1000,"e":0,"l":5,"c":10},{"d":1000,"e":1,"l":5,"c":1},{"d":1000,"e":0,"l":6,"c":10},{"d":1000,"e":1,"l":6,"c":1},{"d":1000,"e":0,"l":7,"c":10},{"d":1000,"e":1,"l":7,"c":1}]},{"id":2,"n":"Block","en":"","c":[6,6,6,6,6,6,6,31,31,31,31,31,6,6,6,6,6,10,6,0,0,4,0,30,10,6,0,6,6,6,6,0,0,3,3,30,6,6,1,0,6,32,0,51,0,0,3,30,6,6,6,6,60,0,0,0,0,3,3,30,6,6,6,10,6,6,0,3,3,3,0,30,6,6,3,3,3,3,3,3,0,0,0,1,6,6,3,0,0,0,0,0,0,0,2,2,6,6,3,3,3,3,3,3,3,29,53,2,10,6,6,6,6,6,0,0,61,25,2,2,6,6,6,10,6,6,0,70,0,1,2,2,6,6,6,6,6,6,6,72,30,2,2,2],"d":"","sp":[{"d":1000,"e":7,"l":1,"c":10},{"d":1000,"e":7,"l":2,"c":10},{"d":1000,"e":7,"l":3,"c":10},{"d":1000,"e":7,"l":4,"c":10},{"d":1000,"e":7,"l":5,"c":10},{"d":1000,"e":7,"l":6,"c":10},{"d":1000,"e":7,"l":7,"c":10}]},{"id":3,"n":"Stream","en":"","c":[6,6,6,6,6,6,6,6,6,6,6,6,65,4,3,3,3,3,3,29,6,10,6,6,65,0,0,0,0,0,0,0,6,6,6,6,2,4,3,3,3,3,3,29,6,6,6,6,2,2,1,0,0,0,0,0,66,6,6,10,2,2,2,1,0,0,0,0,0,0,6,6,2,2,2,2,24,24,24,24,24,24,6,6,2,2,2,2,4,3,3,3,3,3,29,6,2,2,2,2,0,0,0,0,0,0,0,6,2,2,2,1,4,3,3,3,3,3,29,6,2,2,2,2,0,0,0,0,0,0,0,6,2,2,2,2,1,0,0,0,0,0,0,6],"d":"","sp":[{"d":1000,"e":5,"l":1,"c":10},{"d":1000,"e":5,"l":2,"c":10},{"d":1000,"e":5,"l":3,"c":10},{"d":1000,"e":5,"l":4,"c":10},{"d":1000,"e":5,"l":5,"c":10},{"d":1000,"e":5,"l":6,"c":10},{"d":1000,"e":5,"l":7,"c":10}]},{"id":4,"n":"Carpenter","en":"","c":[22,22,22,22,22,22,22,22,22,22,22,2,22,22,22,22,22,22,22,77,22,22,22,2,22,77,21,21,21,22,21,21,21,4,2,2,22,22,21,2,21,77,21,2,2,2,2,2,22,22,21,2,21,21,21,2,2,2,2,2,22,77,21,2,2,2,2,2,2,2,2,2,22,22,21,21,2,2,6,6,6,10,6,1,22,22,77,21,2,6,6,0,0,6,0,0,22,21,21,21,2,6,0,18,6,0,0,0,2,29,2,2,6,6,7,0,16,0,0,0,2,2,2,6,10,0,1,0,6,0,0,0,2,2,2,6,6,6,6,6,6,0,0,6],"d":"","sp":[{"d":1000,"e":2,"l":1,"c":10},{"d":1000,"e":2,"l":2,"c":10},{"d":1000,"e":2,"l":3,"c":10},{"d":1000,"e":2,"l":4,"c":10},{"d":1000,"e":2,"l":5,"c":10},{"d":1000,"e":2,"l":6,"c":10},{"d":1000,"e":2,"l":7,"c":10}]},{"id":5,"n":"Coal","en":"","c":[44,44,44,44,44,6,6,6,6,6,6,6,46,46,74,0,1,0,0,0,1,0,0,0,46,46,0,0,0,2,2,0,0,69,0,0,2,46,0,1,2,2,2,2,0,1,2,2,2,2,0,2,2,2,2,2,0,2,2,2,2,2,0,0,0,68,0,0,0,2,2,2,2,15,2,67,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,22,2,2,22,22,2,2,2,2,2,2,22,22,22,22,22,22,22,2,2,2,2,2,22,22,22,22,22,22,22,22,22,2,2,2,22,22,22,22,22,22,22,22,22,2,2,2],"d":"","sp":[]},{"id":6,"n":"Farm","en":"","c":[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,11,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,0,15,0,6,6,6,6,11,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,45,6,11,6,6,6,6,6,0,0,0,0,45,6,6,6,6,6,0,0,0,0,0,55,45,6,6,6,6,0,37,37,37,62,0,0,45,6,6,6,6,0,37,37,37,0,0,0,45,6,6,11,6,6,0,0,0,0,0,0,45,6,6,6,6,6,6,0,0,0,0,0,45],"d":"","sp":[]},{"id":7,"n":"Broken Stone Bridge","en":"","c":[2,2,2,6,6,6,6,6,6,0,0,6,2,2,2,6,10,6,6,6,0,0,0,6,76,75,75,6,6,6,6,0,0,0,0,6,2,2,2,6,6,6,0,0,14,0,0,6,2,2,6,6,6,54,0,0,0,0,0,6,2,2,6,6,6,0,14,0,0,14,0,6,6,6,6,6,0,0,0,0,0,0,6,6,6,6,6,0,41,0,0,6,6,6,6,0,6,10,6,0,0,0,42,42,42,0,0,0,6,6,6,6,6,6,6,6,6,0,0,0,6,6,6,6,10,6,6,0,0,0,0,0,6,6,6,6,6,6,0,0,0,0,0,6],"d":"","sp":[]},{"id":8,"n":"Crane","en":"","c":[6,6,6,6,6,6,6,0,0,2,2,2,6,6,6,6,6,6,6,0,4,1,2,2,6,6,6,6,6,6,6,0,3,0,2,2,23,6,6,6,6,6,0,0,3,0,0,2,23,23,6,6,6,0,3,3,3,0,0,2,23,23,23,6,6,0,3,0,0,1,0,2,23,23,23,6,6,0,3,2,2,0,0,1,23,23,23,6,6,6,3,2,56,29,3,0,23,23,23,6,6,6,3,1,57,0,3,0,23,23,23,23,6,6,3,3,3,3,3,0,23,23,23,23,6,6,6,0,0,0,0,0,23,23,23,23,23,6,6,6,6,6,6,6],"d":"","sp":[{"d":1000,"e":7,"l":1,"c":10},{"d":1000,"e":7,"l":2,"c":10},{"d":1000,"e":7,"l":3,"c":10},{"d":1000,"e":7,"l":4,"c":10},{"d":1000,"e":7,"l":5,"c":10},{"d":1000,"e":7,"l":6,"c":10},{"d":1000,"e":7,"l":7,"c":10}]},{"id":9,"n":"Lost village","en":"","d":"","c":[6,6,6,6,6,6,0,0,0,0,0,6,6,6,6,6,0,0,0,0,0,0,0,6,6,6,6,0,0,0,0,0,0,73,6,6,6,6,0,0,63,0,0,0,0,6,6,6,6,6,3,3,3,0,3,3,3,6,6,6,6,6,3,0,3,0,3,0,3,6,6,6,6,0,3,0,3,0,3,0,3,0,6,6,6,0,3,0,3,0,3,0,3,0,0,6,6,4,3,0,29,0,29,0,3,4,0,6,30,0,0,30,30,64,30,30,30,0,0,79,30,0,30,50,50,50,50,50,50,30,0,6,30,30,50,50,50,50,50,50,50,50,30,30],"sp":[{"d":1000,"e":3,"l":1,"c":10},{"d":1000,"e":4,"l":1,"c":1},{"d":1000,"e":3,"l":2,"c":10},{"d":1000,"e":4,"l":2,"c":1},{"d":1000,"e":3,"l":3,"c":10},{"d":1000,"e":4,"l":3,"c":1},{"d":1000,"e":3,"l":4,"c":10},{"d":1000,"e":4,"l":4,"c":1},{"d":1000,"e":3,"l":5,"c":10},{"d":1000,"e":4,"l":5,"c":1},{"d":1000,"e":3,"l":6,"c":10},{"d":1000,"e":4,"l":6,"c":1},{"d":1000,"e":3,"l":7,"c":10},{"d":1000,"e":4,"l":7,"c":1}]},{"id":10,"n":"Lost Forest","en":"","d":"","c":[6,6,6,6,6,6,6,6,23,23,23,23,6,6,6,6,6,23,23,23,23,23,23,23,6,6,6,6,6,6,6,23,23,23,23,23,6,6,6,6,6,6,6,6,6,6,6,23,6,1,0,0,0,78,6,6,6,6,6,6,6,0,1,0,0,78,0,0,6,6,6,6,6,0,0,0,1,78,0,0,1,0,0,6,0,0,0,0,0,78,1,0,0,0,0,0,0,2,0,1,2,78,0,0,0,2,0,0,0,2,2,2,1,2,0,0,0,1,2,0,0,2,0,0,0,0,0,2,0,0,0,2,2,1,2,1,2,2,2,1,1,2,2,2],"sp":[]},{"id":11,"n":"??","en":"","d":"","c":[23,23,23,23,23,6,6,6,6,6,6,6,23,23,23,23,6,6,6,6,6,0,0,0,23,23,23,6,6,6,6,6,0,0,0,0,23,6,6,6,6,6,6,0,15,0,0,0,6,6,6,6,6,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"sp":[]},{"id":12,"n":"Cave 1","en":"Cave - Cookie","d":"","c":[48,48,48,48,48,48,48,48,48,48,48,48,48,47,47,47,47,47,47,47,47,47,47,48,48,40,47,47,47,47,47,47,47,47,47,48,48,47,47,47,47,47,47,47,47,47,47,48,48,47,47,47,47,47,47,47,47,47,47,48,48,47,47,47,47,47,47,47,47,47,47,48,48,39,47,47,47,47,47,47,47,47,47,48,48,47,47,47,47,47,47,47,47,47,47,48,48,47,47,47,47,47,47,47,47,47,47,48,48,47,47,47,47,47,47,47,47,47,47,48,48,47,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,48,48,48,48],"sp":[]}];var actionData=[{"id":0,"n":"Give Wood","en":"","rw":[{"t":0,"st":0,"o":0,"a":1}]},{"id":1,"n":"Give Stone","en":"","rw":[{"t":0,"st":0,"o":1,"a":1}]},{"id":2,"n":"Give Flower","en":"","rw":[{"t":0,"st":0,"o":4,"a":1}]},{"id":3,"n":"Give Fish","en":"","rw":[{"t":0,"st":0,"o":5,"a":1}]},{"id":4,"n":"Give Fruit","en":"","rw":[{"t":0,"st":0,"o":9,"a":1}],"d":""},{"id":5,"n":"Give Wheat","en":"","d":"","rw":[{"t":0,"st":0,"o":13,"a":1}]},{"id":6,"n":"Give Water","en":"","d":"","rw":[{"t":0,"st":0,"o":16,"a":1}]}];var buildingData=[{"id":0,"n":"Axe","en":"","d":"Build on a tree to gather wood.","tt":0,"at":1000,"pc":2,"uo":true,"cu":true,"nc":true,"is":false,"ic":false,"cs":false,"ka":false,"im":"_axe","co":[{"t":0,"st":0,"o":1,"a":20}],"rq":[],"rw":[{"t":0,"st":0,"o":0,"a":1}],"cop":0,"upp":2.5,"rwp":2,"rqp":2,"si":""},{"id":1,"n":"Pickaxe","en":"","d":"Build on a mountain to gather stone.","tt":0,"at":1000,"pc":1,"uo":true,"cu":true,"nc":true,"is":false,"ic":false,"cs":false,"ka":false,"im":"_pickaxe","co":[{"t":0,"st":0,"o":0,"a":20}],"rq":[],"rw":[{"t":0,"st":0,"o":1,"a":1}],"cop":0,"upp":2.5,"rwp":2,"rqp":2,"si":""},{"id":2,"n":"Storage","en":"","d":"Store gathered resources.","tt":0,"at":0,"pc":3,"uo":true,"cu":false,"nc":false,"is":true,"ic":false,"cs":false,"ka":false,"im":"_storage","co":[{"t":0,"st":0,"o":0,"a":10}],"rq":[],"rw":[],"cop":4,"upp":0,"rwp":0,"rqp":0,"si":""},{"id":3,"n":"Road","en":"","d":"Help transfer resources between buildings and storage unit.","tt":0,"at":0,"pc":3,"uo":true,"cu":false,"nc":false,"is":false,"ic":true,"cs":false,"ka":false,"im":"_road","co":[{"t":0,"st":0,"o":1,"a":10}],"rq":[],"rw":[],"cop":1.13,"upp":0,"rwp":0,"rqp":0,"si":""},{"id":4,"n":"Tower 1","en":"","d":"Damage 1 nearby enemy.","tt":1,"at":1000,"pc":3,"uo":true,"cu":true,"nc":true,"is":false,"ic":false,"cs":false,"ka":true,"im":"_tower","co":[{"t":0,"st":0,"o":6,"a":4}],"rq":[{"t":0,"st":0,"o":0,"a":8}],"rw":[{"t":0,"st":0,"o":2,"a":1}],"cop":0,"upp":2.5,"rwp":2,"rqp":2,"si":"Anim_explosion"},{"id":5,"n":"Tower 2","en":"","d":"Damage all nearby enemy.","tt":1,"at":1000,"pc":3,"uo":true,"cu":true,"nc":true,"is":false,"ic":false,"cs":false,"ka":true,"im":"_tower2","co":[{"t":0,"st":0,"o":6,"a":8},{"t":0,"st":0,"o":8,"a":8}],"rq":[{"t":0,"st":0,"o":1,"a":32}],"rw":[{"t":0,"st":0,"o":2,"a":1}],"cop":0,"upp":2.5,"rwp":2,"rqp":2,"si":"Anim_smoke"},{"id":6,"n":"Spawn Start","en":"","d":"Enemies will start spawning here.","tt":0,"at":5000,"uo":false,"cu":false,"nc":false,"is":false,"ic":false,"cs":true,"ka":true,"im":"_crystal","co":[],"rq":[],"rw":[],"pc":-1,"cop":0,"upp":0,"rwp":0,"rqp":0,"si":""},{"id":7,"n":"-DEL- Spawn End","en":"","d":"When the map has no more life, it will explode and all building will disapear.","tt":0,"at":0,"uo":false,"cu":false,"nc":false,"is":false,"ic":false,"cs":false,"ka":false,"im":"_crystal2","co":[],"rq":[],"rw":[],"pc":-1,"cop":0,"upp":0,"rwp":0,"rqp":0,"si":""},{"id":8,"n":"Plank","en":"","d":"Converts wood to plank.","tt":0,"at":1000,"pc":3,"uo":true,"cu":true,"nc":true,"is":false,"ic":false,"cs":false,"ka":false,"im":"_plank","co":[{"t":0,"st":0,"o":0,"a":400},{"t":0,"st":0,"o":1,"a":400}],"rq":[{"t":0,"st":0,"o":0,"a":8}],"rw":[{"t":0,"st":0,"o":6,"a":1}],"cop":0,"upp":2.5,"rwp":2,"rqp":2,"si":""},{"id":9,"n":"Coal","en":"","d":"Converts wood to coal.","tt":0,"at":1000,"pc":3,"uo":true,"cu":true,"nc":true,"is":false,"ic":false,"cs":false,"ka":false,"im":"_coal","co":[{"t":0,"st":0,"o":1,"a":5000}],"rq":[{"t":0,"st":0,"o":0,"a":8}],"rw":[{"t":0,"st":0,"o":7,"a":1}],"cop":0,"upp":2.5,"rwp":2,"rqp":2,"si":""},{"id":10,"n":"Block","en":"","d":"Converts stone to block.","tt":0,"at":1000,"pc":3,"uo":true,"cu":true,"nc":true,"is":false,"ic":false,"cs":false,"ka":false,"im":"_block","co":[{"t":0,"st":0,"o":0,"a":400},{"t":0,"st":0,"o":1,"a":400}],"rq":[{"t":0,"st":0,"o":1,"a":8}],"rw":[{"t":0,"st":0,"o":8,"a":1}],"cop":0,"upp":2.5,"rwp":2,"rqp":2,"si":""},{"id":11,"n":"Iron Ore","en":"","d":"Build on a mountain to gather iron ore.","tt":0,"at":1000,"pc":1,"im":"_ironore","uo":true,"cu":true,"nc":true,"is":false,"ic":false,"cs":false,"ka":false,"cop":0,"upp":2.5,"rqp":2,"rwp":2,"co":[{"t":0,"st":0,"o":8,"a":300},{"t":0,"st":0,"o":6,"a":300}],"rq":[],"rw":[{"t":0,"st":0,"o":10,"a":1}],"si":""},{"id":12,"n":"Iron","en":"","d":"Converts iron ore to iron.","tt":0,"at":1000,"pc":3,"im":"_iron","uo":true,"cu":true,"nc":true,"is":false,"ic":false,"cs":false,"ka":false,"cop":0,"upp":2.5,"rqp":2,"rwp":2,"co":[{"t":0,"st":0,"o":6,"a":500},{"t":0,"st":0,"o":8,"a":500}],"rq":[{"t":0,"st":0,"o":7,"a":4},{"t":0,"st":0,"o":10,"a":4}],"rw":[{"t":0,"st":0,"o":11,"a":1}],"si":""},{"id":13,"n":"Steal","en":"","d":"","tt":0,"at":1000,"pc":0,"im":"_steal","uo":true,"cu":true,"nc":false,"is":false,"ic":false,"cs":false,"ka":false,"cop":0,"upp":2.5,"rqp":2,"rwp":2,"co":[{"t":0,"st":0,"o":6,"a":1000},{"t":0,"st":0,"o":8,"a":1000},{"t":0,"st":0,"o":11,"a":500}],"rq":[{"t":0,"st":0,"o":7,"a":4},{"t":0,"st":0,"o":11,"a":4}],"rw":[{"t":0,"st":0,"o":12,"a":1}],"si":""},{"id":14,"n":"Cookie Factory","en":"","d":"","tt":0,"at":10000,"pc":0,"im":"_cookiefactory","uo":false,"cu":false,"nc":true,"is":false,"ic":false,"cs":false,"ka":false,"cop":0,"upp":0,"rqp":0,"rwp":0,"co":[],"rq":[{"t":0,"st":0,"o":13,"a":1}],"rw":[{"t":0,"st":0,"o":14,"a":1}],"si":""},{"id":15,"n":"Pipe","en":"","d":"Help transfer mana between buildings and storage unit.","tt":0,"at":0,"pc":3,"im":"_pipe","uo":true,"cu":false,"nc":false,"is":false,"ic":true,"cs":false,"ka":false,"cop":1.13,"upp":0,"rqp":0,"rwp":0,"co":[{"t":0,"st":0,"o":12,"a":10}],"rq":[],"rw":[],"si":""},{"id":16,"n":"Drill","en":"","d":"","tt":0,"at":1000,"pc":0,"im":"_drill","uo":false,"cu":true,"nc":false,"is":false,"ic":false,"cs":false,"ka":false,"cop":0,"upp":2.5,"rqp":2,"rwp":2,"co":[{"t":0,"st":0,"o":8,"a":200},{"t":0,"st":0,"o":6,"a":200}],"rq":[{"t":0,"st":0,"o":0,"a":8}],"rw":[{"t":0,"st":0,"o":17,"a":1}],"si":""}];var questData=[{"id":0,"n":"Build Boat","en":"","d":"","ss":"- Our boat was damage in the latest storm.\n- Help us gather planks to fix the boat.\n- We will be able to open the passage to the east.","su":"Gather planks to fix the boat.","es":"- With the boat fix.\n- We can give you safe passage to the east.","eu":"After fixing the boat, the passage to the east is now open.","rq":[{"t":0,"st":0,"o":6,"a":1000}],"rw":[{"t":1,"st":1,"o":2,"a":1}]},{"id":1,"n":"Fisherman","en":"","d":"","ss":"- I'm having trouble gathering fish.\n- Can you help me gather some fishes?\n- I won't give you anything since the developer did not finish my quest.","su":"Gather fish for nothing.","es":"- How...\n- How can you gather so many fish?!","eu":"... wow! ... that's all I can say.","rq":[{"t":0,"st":0,"o":5,"a":1000}],"rw":[]},{"id":2,"n":"Standing Man","en":"","d":"","ss":"- It's very dangerous up north.\n- I can't let anybody go there.\n- Show me your strength and I will let you pass.","su":"Show me you can handle it by killing slimes.","es":"- You are very strong.\n- Good luck!","eu":"The passage to the north is now open.","rq":[{"t":3,"st":3,"o":0,"a":100}],"rw":[{"t":1,"st":1,"o":3,"a":1}]},{"id":3,"n":"Start your adventure","en":"","d":"","ss":"- You want to go up north?\n- We really need you here...\n- Can you help us gather some wood and stone before going on your journey?","su":"Get wood and stone to continue the path north.","es":"- With these resources, we will be able to keep the village running for a while.\n- Good luck on your journey up north.","eu":"After giving the resources, the path north was open.","rq":[{"t":0,"st":0,"o":0,"a":1000},{"t":0,"st":0,"o":1,"a":1000}],"rw":[{"t":1,"st":1,"o":1,"a":1}]},{"id":4,"n":"Broken Bridge","en":"","d":"","ss":"- Help!\n- I was investigating the crystal and the bridge collapse.\n- Can you gather wood and help fix the bridge?","su":"Gather wood to fix the bridge.","es":"- I did some investigation.\n- The crystal are getting active.\n- I think we need to start protecting the city.\n- Here are some blueprint.","eu":"The carpenter gave tower and plank blueprint.","rq":[{"t":0,"st":0,"o":0,"a":10000}],"rw":[{"t":2,"st":2,"o":4,"a":1},{"t":2,"st":2,"o":8,"a":1}]},{"id":5,"n":"Port city","en":"","d":"","ss":"- Our carpenter went to the west to investigate the crystals.\n- Can you help us gather fruits?\n- Don't worry, they will grow back.\n- We will open the path to the west.","su":"Gather fruits to open the path to the west.","es":"- The path to the west is now open.\n- Please, see if the carpenter is ok.","eu":"The path to the west is open.","rq":[{"t":0,"st":0,"o":9,"a":20}],"rw":[{"t":1,"st":1,"o":4,"a":1},{"t":1,"st":1,"o":7,"a":1}]},{"id":6,"n":"Builder","en":"","d":"","ss":"- It will get difficult if you want to transfer resource without roads.\n- Bring me some stone and I'll teach you how to build roads.","su":"Get stone to get the blueprint for roads.","es":"- This is enough stone.\n- Here's the blueprint on how to build roads.","eu":"The builder gave the blueprint for roads.","rq":[{"t":0,"st":0,"o":1,"a":100}],"rw":[{"t":2,"st":2,"o":3,"a":1}]},{"id":7,"n":"Miner","en":"","d":"","ss":"- Our village got destroyed.\n- I need to gather a lot of stone.\n- With the stones, I'll be able to teach you have to make blocks.","su":"Gather stone to get the blueprint for block.","es":"- This will help us a lot.\n- Here's the blueprint to create blocks.","eu":"The miner gave the blueprint for block.","rq":[{"t":0,"st":0,"o":1,"a":300000}],"rw":[{"t":2,"st":2,"o":10,"a":1}]},{"id":8,"n":"Fix well","en":"","d":"","rq":[{"t":0,"st":0,"o":8,"a":1000}],"rw":[],"ss":"- It's hard lately to gather stone and create block.\n- I don't know when we will be able to fix the well.\n- With the well, we will be able to get fresh water.","su":"Gather blocks to fix the well.","es":"- Finally!\n- We can gather fresh water.","eu":"After fixing the well, it's now possible to gather water."},{"id":9,"n":"Cookies","en":"","d":"","rq":[{"t":0,"st":0,"o":14,"a":100}],"rw":[],"ss":"- Can you please\n- Help an old lady bake some cookies?\n- This quest has not been properly designed yet.","su":"Help make cookies for no good reason.","es":"- Thanks you","eu":"Nothing happen"},{"id":10,"n":"Broken Stone Bridge","en":"","d":"","rq":[{"t":0,"st":0,"o":8,"a":50000}],"rw":[{"t":1,"st":1,"o":9,"a":1}],"ss":"- There used to be a stone bridge that would bring us to the next village.\n- Very strong monsters destroyed the bridge.\n- With the bridge fix, the path to the south will be open.","su":"Fix the broken stone bridge to go south.","es":"- The passage is now open.\n- It's been so long.\n- Be careful.","eu":"Passage to the south is now open."},{"id":11,"n":"Blocked cave","en":"","d":"","rq":[{"t":0,"st":0,"o":15,"a":1}],"rw":[],"ss":"- The cave has been blocked for a long time.\n- There much be something dangerous inside.","su":"Find the crowbar to open the cave.","es":"- Be careful.","eu":"We can now enter the cave."},{"id":12,"n":"Flower Lady","en":"","d":"","rq":[{"t":0,"st":0,"o":4,"a":200}],"rw":[{"t":0,"st":0,"o":15,"a":1}],"ss":"- Things are not as easy as they were in the past.\n- I would love to have some flowers to make the place look happier.","su":"Gather some flowers.","es":"- They are so pretty!\n- Thanks you.\n- I don't have much to give as a reward.","eu":"The lady gave you an old crowbar."},{"id":13,"n":"Fix Barn","en":"","d":"","rq":[{"t":0,"st":0,"o":18,"a":1}],"rw":[],"ss":"- This barn has been destroyed for a long time.\n- Hopefully the developer figures out how we can fix it.","su":"The barn is destroyed but no one knows how to fix it.","es":"","eu":""},{"id":14,"n":"Thirsty Town","en":"","d":"","rq":[{"t":0,"st":0,"o":16,"a":20}],"rw":[{"t":1,"st":1,"o":6,"a":1}],"ss":"- We haven't had good water in a long time.\n- I don't know how long we can last without having the well fixed.\n- We will show you how to go to the north.","su":"Fix the well and help the village gather water.","es":"- You saved the village!\n- We will tell you how you can travel north.","eu":"After giving water, the village explain how to get to the north."},{"id":15,"n":"Get Tower 2","en":"","d":"","rq":[{"t":0,"st":0,"o":5,"a":50}],"rw":[{"t":2,"st":2,"o":5,"a":1}],"ss":"- Did you come from the north?\n- We haven't been in contact with them in a very long time.\n- We used to trade fish with them.\n- Can you get us some fish?\n- We might be able to help you kill enemies.","su":"Gather fish for the village to gain a new tower.","es":"- It's been so long since we had some good fish.\n- Here's the blueprint for the tower 2.","eu":"After giving the fish, the town gave the blueprint for the tower 2."},{"id":16,"n":"Crane Operator","en":"","d":"","rq":[{"t":3,"st":3,"o":7,"a":100}],"rw":[{"t":2,"st":2,"o":11,"a":1}],"ss":"- These spider are causing so much trouble.\n- I don't know where they are coming from.\n- I cannot gather iron ore properly.","su":"Help the crane operator kill some spiders so he can continue his work.","es":"- It's still dangerous but at least I can start working.\n- Here's the blueprint to mine iron ore.","eu":"After helping clear some spiders, the operator gave you the blueprint to mine iron ore."},{"id":17,"n":"Open fence 2","en":"","d":"","rq":[{"t":3,"st":3,"o":5,"a":200}],"rw":[{"t":1,"st":1,"o":5,"a":1}],"ss":"- The well near our village broke.\n- I need to come here every day to gather water.\n- There are to many monsters and I can't go back.\n- We can travel to the west together.","su":"Help kill some monster for the lady to go back to the western village.","es":"- Thanks for clearing the path.\n- Hopefully we can find someone to fix our well.","eu":"After helping the lady, the path west is open."},{"id":18,"n":"Coal Well","en":"","d":"","rq":[{"t":0,"st":0,"o":8,"a":100000},{"t":0,"st":0,"o":6,"a":100000}],"rw":[],"ss":"- Monsters broken the well.\n- We do not have what is needed to fix it.","su":"Find the resource to fix the well.","es":"- This will help us a lot.\n- Hopefully we don't need to gather water from the river anymore.","eu":"After fixing the well, you can now gather water."},{"id":19,"n":"Coal Village","en":"","d":"","rq":[{"t":0,"st":0,"o":10,"a":100000},{"t":0,"st":0,"o":7,"a":100000}],"rw":[{"t":2,"st":2,"o":12,"a":1}],"ss":"- Our supply of coal and iron ore has been low lately.\n- We have the ability to smelt iron.\n- If you help us, we can teach you how.","su":"Help the village gather coal and iron ore.","es":"- Thanks you.\n- We can turn our furnace on.\n- Here's the blueprint to create iron.","eu":"After giving the village the supply, they gave you the blueprint for iron."},{"id":20,"n":"Coal Person","en":"","d":"","rq":[{"t":0,"st":0,"o":9,"a":100}],"rw":[{"t":2,"st":2,"o":9,"a":1}],"ss":"- I've been working in the coal mine for so long.\n- I wish I could get some fruits.\n- We can work in the mine together and I'll teach you how to gather coal.","su":"The miner hasn't had fruit for a long time.","es":"- So delicious.\n- num num num...\n- Here's the blueprint to mine coal.","eu":"After giving some fruits, the miner gave you the blueprint to gather coal."},{"id":21,"n":"Broken Drill","en":"","d":"","rq":[{"t":0,"st":0,"o":19,"a":1}],"rw":[],"ss":"- A boulder fell.\n- I built this drill to try and open the path to the south.\n- The drill broke and I don't have the parts.","su":"Find the part that is needed to fix the drill.","es":"- With the drill fixed, we just need to get enough power.","eu":"The drill can now function to open the path to the south."},{"id":22,"n":"Break Rock","en":"","d":"","rq":[{"t":0,"st":0,"o":17,"a":200000}],"rw":[{"t":1,"st":1,"o":8,"a":1}],"ss":"- There's a big boulder that appeared.\n- We need a lot of drill power to brake it.\n- This should open the path to the south.","su":"Gather drill power to break the boulder.","es":"- This was a lot of work.\n- But we can finally go south.","eu":"After breaking the boulder, the path to the south is now open."},{"id":23,"n":"Open Desert","en":"","d":"","rq":[{"t":0,"st":0,"o":18,"a":1}],"rw":[],"ss":"- The way to the desert is not open.\n- The developer did not create this part.","su":"The way to the desert is not open.","es":"","eu":""},{"id":24,"n":"Open Swamp","en":"","d":"","rq":[{"t":0,"st":0,"o":18,"a":1}],"rw":[],"ss":"- I cannot let you pass.\n- The developer did not build this section.","su":"The path to the swamp is blocked.","es":"","eu":""},{"id":25,"n":"Open Snow","en":"","d":"","rq":[{"t":0,"st":0,"o":18,"a":1}],"rw":[],"ss":"- You cannot go further.\n- The developer did not build this section.","su":"The path to the snow is blocked.","es":"","eu":""},{"id":26,"n":"Open Volcano","en":"","d":"","rq":[{"t":0,"st":0,"o":18,"a":1}],"rw":[],"ss":"- You cannot go further.\n- The developer did not build this section.","su":"The path to the volcano is blocked.","es":"","eu":""},{"id":27,"n":"Engineer","en":"","d":"","rq":[{"t":3,"st":3,"o":3,"a":100}],"rw":[{"t":0,"st":0,"o":19,"a":1}],"ss":"- I haven't seen anybody from the north since the monsters appeared.\n- Can you help kill some monsters.\n- I'll be able to help you out after.","su":"The engineer need help clearing the monsters so he can work.","es":"- With some of the monsters gone.\n- I'll be able to continue my work.\n- Here's the part to fix the drill.","eu":"After clearing some monsters, the engineer gave a drill part."},{"id":28,"n":"Fix Iron Bridge","en":"","d":"","rq":[{"t":0,"st":0,"o":11,"a":100000}],"rw":[{"t":1,"st":1,"o":10,"a":1}],"ss":"- The bridge collapse a while ago.\n- The path to the east is blocked.\n- Without access to the north, we couldn't find iron.","su":"Find some iron to fix the bridge and open the path to the east.","es":"- We are grateful for all the things you did to us.\n- Hopefully the bridge will stay for a long time.","eu":"After fixing the bridge, the way east is not open."},{"id":29,"n":"Stone Bridge Village","en":"","d":"","rq":[{"t":0,"st":0,"o":18,"a":1}],"rw":[],"ss":"- We haven't been in contact with the southern village for a long time.","su":"Hope the southern village is doing well.","es":"","eu":""}];var worldData=[{"id":0,"n":"Main World","en":"","c":[{"x":0,"y":0,"m":0},{"x":0,"y":-1,"m":1},{"x":1,"y":-1,"m":2},{"x":0,"y":-2,"m":3},{"x":-1,"y":-1,"m":4},{"x":-1,"y":-2,"m":5},{"x":1,"y":-2,"m":6},{"x":-1,"y":0,"m":7},{"x":1,"y":0,"m":8},{"x":-1,"y":1,"m":9},{"x":0,"y":1,"m":10},{"x":1,"y":1,"m":11}]}];var spritesheetData=[{id:0,n:"_axe",i:0,x:0,y:0,w:32,h:32,f:0},{id:87,n:"_tree_2",i:0,x:32,y:0,w:32,h:32,f:0},{id:86,n:"_tree",i:0,x:64,y:0,w:32,h:32,f:0},{id:85,n:"_trashcan",i:0,x:96,y:0,w:32,h:32,f:0},{id:84,n:"_tower2",i:0,x:128,y:0,w:32,h:32,f:0},{id:83,n:"_tower",i:0,x:160,y:0,w:32,h:32,f:0},{id:82,n:"_streamv",i:0,x:192,y:0,w:32,h:32,f:0},{id:81,n:"_stream",i:0,x:224,y:0,w:32,h:32,f:0},{id:80,n:"_storage",i:0,x:256,y:0,w:32,h:32,f:0},{id:79,n:"_stone_bridge_on",i:0,x:288,y:0,w:32,h:32,f:0},{id:78,n:"_stone_bridge_off",i:0,x:320,y:0,w:32,h:32,f:0},{id:77,n:"_steal",i:0,x:352,y:0,w:32,h:32,f:0},{id:76,n:"_standing",i:0,x:384,y:0,w:32,h:32,f:0},{id:88,n:"_upgrade",i:0,x:416,y:0,w:32,h:32,f:0},{id:75,n:"_stalagmite",i:0,x:448,y:0,w:32,h:32,f:0},{id:73,n:"_small_upgrade",i:0,x:480,y:0,w:32,h:32,f:0},{id:72,n:"_select",i:0,x:512,y:0,w:32,h:32,f:0},{id:71,n:"_sand",i:0,x:544,y:0,w:32,h:32,f:0},{id:70,n:"_sad_sign",i:0,x:576,y:0,w:32,h:32,f:0},{id:69,n:"_road",i:1,x:608,y:0,w:32,h:32,f:0},{id:69,n:"_road",i:10,x:640,y:0,w:32,h:32,f:0},{id:69,n:"_road",i:11,x:672,y:0,w:32,h:32,f:0},{id:69,n:"_road",i:12,x:704,y:0,w:32,h:32,f:0},{id:69,n:"_road",i:13,x:736,y:0,w:32,h:32,f:0},{id:69,n:"_road",i:14,x:768,y:0,w:32,h:32,f:0},{id:69,n:"_road",i:15,x:800,y:0,w:32,h:32,f:0},{id:69,n:"_road",i:2,x:832,y:0,w:32,h:32,f:0},{id:69,n:"_road",i:3,x:864,y:0,w:32,h:32,f:0},{id:69,n:"_road",i:4,x:896,y:0,w:32,h:32,f:0},{id:69,n:"_road",i:5,x:928,y:0,w:32,h:32,f:0},{id:69,n:"_road",i:6,x:960,y:0,w:32,h:32,f:0},{id:69,n:"_road",i:7,x:992,y:0,w:32,h:32,f:0},{id:69,n:"_road",i:8,x:1024,y:0,w:32,h:32,f:0},{id:69,n:"_road",i:9,x:1056,y:0,w:32,h:32,f:0},{id:69,n:"_road",i:0,x:1088,y:0,w:32,h:32,f:0},{id:68,n:"_port_boat",i:0,x:1120,y:0,w:32,h:32,f:0},{id:134,n:"Anim_ray",i:8,x:1152,y:0,w:32,h:32,f:60},{id:134,n:"Anim_ray",i:9,x:1184,y:0,w:32,h:32,f:60},{id:134,n:"Anim_ray",i:10,x:1216,y:0,w:32,h:32,f:60},{id:134,n:"Anim_ray",i:11,x:1248,y:0,w:32,h:32,f:60},{id:134,n:"Anim_ray",i:12,x:1280,y:0,w:32,h:32,f:60},{id:134,n:"Anim_ray",i:13,x:1312,y:0,w:32,h:32,f:60},{id:134,n:"Anim_ray",i:14,x:1344,y:0,w:32,h:32,f:60},{id:134,n:"Anim_ray",i:15,x:1376,y:0,w:32,h:32,f:60},{id:134,n:"Anim_ray",i:16,x:1408,y:0,w:32,h:32,f:60},{id:134,n:"Anim_ray",i:17,x:1440,y:0,w:32,h:32,f:60},{id:134,n:"Anim_ray",i:0,x:1472,y:0,w:32,h:32,f:60},{id:134,n:"Anim_ray",i:18,x:1504,y:0,w:32,h:32,f:60},{id:134,n:"Anim_ray",i:19,x:1536,y:0,w:32,h:32,f:60},{id:134,n:"Anim_ray",i:20,x:1568,y:0,w:32,h:32,f:60},{id:134,n:"Anim_ray",i:21,x:1600,y:0,w:32,h:32,f:60},{id:134,n:"Anim_ray",i:22,x:1632,y:0,w:32,h:32,f:60},{id:134,n:"Anim_ray",i:23,x:1664,y:0,w:32,h:32,f:60},{id:134,n:"Anim_ray",i:1,x:1696,y:0,w:32,h:32,f:60},{id:134,n:"Anim_ray",i:2,x:1728,y:0,w:32,h:32,f:60},{id:134,n:"Anim_ray",i:3,x:1760,y:0,w:32,h:32,f:60},{id:134,n:"Anim_ray",i:4,x:1792,y:0,w:32,h:32,f:60},{id:134,n:"Anim_ray",i:5,x:1824,y:0,w:32,h:32,f:60},{id:134,n:"Anim_ray",i:6,x:1856,y:0,w:32,h:32,f:60},{id:134,n:"Anim_ray",i:7,x:1888,y:0,w:32,h:32,f:60},{id:66,n:"_port2",i:0,x:1920,y:0,w:32,h:32,f:0},{id:65,n:"_port",i:0,x:1952,y:0,w:32,h:32,f:0},{id:64,n:"_poison_stream",i:0,x:1984,y:0,w:32,h:32,f:0},{id:63,n:"_poison",i:0,x:2016,y:0,w:32,h:32,f:0},{id:62,n:"_plank",i:0,x:0,y:32,w:32,h:32,f:0},{id:74,n:"_snow",i:0,x:32,y:32,w:32,h:32,f:0},{id:89,n:"_volcano",i:0,x:64,y:32,w:32,h:32,f:0},{id:90,n:"_water",i:0,x:96,y:32,w:32,h:32,f:0},{id:91,n:"_water_stream_h",i:0,x:128,y:32,w:32,h:32,f:0},{id:133,n:"Anim_explosion",i:0,x:160,y:32,w:32,h:32,f:20},{id:133,n:"Anim_explosion",i:1,x:192,y:32,w:32,h:32,f:20},{id:133,n:"Anim_explosion",i:2,x:224,y:32,w:32,h:32,f:20},{id:133,n:"Anim_explosion",i:3,x:256,y:32,w:32,h:32,f:20},{id:133,n:"Anim_explosion",i:4,x:288,y:32,w:32,h:32,f:20},{id:133,n:"Anim_explosion",i:5,x:320,y:32,w:32,h:32,f:20},{id:133,n:"Anim_explosion",i:6,x:352,y:32,w:32,h:32,f:20},{id:133,n:"Anim_explosion",i:7,x:384,y:32,w:32,h:32,f:20},{id:133,n:"Anim_explosion",i:8,x:416,y:32,w:32,h:32,f:20},{id:133,n:"Anim_explosion",i:9,x:448,y:32,w:32,h:32,f:20},{id:133,n:"Anim_explosion",i:10,x:480,y:32,w:32,h:32,f:20},{id:133,n:"Anim_explosion",i:11,x:512,y:32,w:32,h:32,f:20},{id:133,n:"Anim_explosion",i:12,x:544,y:32,w:32,h:32,f:20},{id:133,n:"Anim_explosion",i:13,x:576,y:32,w:32,h:32,f:20},{id:133,n:"Anim_explosion",i:14,x:608,y:32,w:32,h:32,f:20},{id:133,n:"Anim_explosion",i:15,x:640,y:32,w:32,h:32,f:20},{id:133,n:"Anim_explosion",i:16,x:672,y:32,w:32,h:32,f:20},{id:133,n:"Anim_explosion",i:17,x:704,y:32,w:32,h:32,f:20},{id:117,n:"icon_arrow_up_off",i:0,x:736,y:32,w:32,h:32,f:0},{id:116,n:"icon_arrow_up",i:0,x:768,y:32,w:32,h:32,f:0},{id:115,n:"icon_arrow_right_off",i:0,x:800,y:32,w:32,h:32,f:0},{id:114,n:"icon_arrow_right",i:0,x:832,y:32,w:32,h:32,f:0},{id:113,n:"icon_arrow_left_off",i:0,x:864,y:32,w:32,h:32,f:0},{id:112,n:"icon_arrow_left",i:0,x:896,y:32,w:32,h:32,f:0},{id:111,n:"icon_arrow_down_off",i:0,x:928,y:32,w:32,h:32,f:0},{id:110,n:"icon_arrow_down",i:0,x:960,y:32,w:32,h:32,f:0},{id:109,n:"enemy_worm",i:0,x:992,y:32,w:32,h:32,f:0},{id:108,n:"enemy_spider",i:0,x:1024,y:32,w:32,h:32,f:0},{id:107,n:"enemy_slime_red",i:0,x:1056,y:32,w:32,h:32,f:0},{id:106,n:"enemy_slime_blue",i:0,x:1088,y:32,w:32,h:32,f:0},{id:105,n:"enemy_slime",i:0,x:1120,y:32,w:32,h:32,f:0},{id:104,n:"enemy_fire_slime",i:0,x:1152,y:32,w:32,h:32,f:0},{id:103,n:"enemy_demon",i:0,x:1184,y:32,w:32,h:32,f:0},{id:102,n:"enemy_bunny",i:0,x:1216,y:32,w:32,h:32,f:0},{id:101,n:"_woman_3",i:0,x:1248,y:32,w:32,h:32,f:0},{id:100,n:"_woman_2",i:0,x:1280,y:32,w:32,h:32,f:0},{id:99,n:"_woman_1",i:0,x:1312,y:32,w:32,h:32,f:0},{id:98,n:"_wheat_on",i:0,x:1344,y:32,w:32,h:32,f:0},{id:97,n:"_wheat_off",i:0,x:1376,y:32,w:32,h:32,f:0},{id:96,n:"_well_broken",i:0,x:1408,y:32,w:32,h:32,f:0},{id:95,n:"_wellwater",i:0,x:1440,y:32,w:32,h:32,f:0},{id:94,n:"_well",i:0,x:1472,y:32,w:32,h:32,f:0},{id:93,n:"_web",i:0,x:1504,y:32,w:32,h:32,f:0},{id:92,n:"_water_stream_v",i:0,x:1536,y:32,w:32,h:32,f:0},{id:61,n:"_pipe",i:1,x:1568,y:32,w:32,h:32,f:0},{id:61,n:"_pipe",i:10,x:1600,y:32,w:32,h:32,f:0},{id:61,n:"_pipe",i:11,x:1632,y:32,w:32,h:32,f:0},{id:61,n:"_pipe",i:12,x:1664,y:32,w:32,h:32,f:0},{id:61,n:"_pipe",i:13,x:1696,y:32,w:32,h:32,f:0},{id:61,n:"_pipe",i:14,x:1728,y:32,w:32,h:32,f:0},{id:61,n:"_pipe",i:15,x:1760,y:32,w:32,h:32,f:0},{id:61,n:"_pipe",i:2,x:1792,y:32,w:32,h:32,f:0},{id:61,n:"_pipe",i:3,x:1824,y:32,w:32,h:32,f:0},{id:61,n:"_pipe",i:4,x:1856,y:32,w:32,h:32,f:0},{id:61,n:"_pipe",i:5,x:1888,y:32,w:32,h:32,f:0},{id:61,n:"_pipe",i:6,x:1920,y:32,w:32,h:32,f:0},{id:61,n:"_pipe",i:7,x:1952,y:32,w:32,h:32,f:0},{id:61,n:"_pipe",i:8,x:1984,y:32,w:32,h:32,f:0},{id:61,n:"_pipe",i:9,x:2016,y:32,w:32,h:32,f:0},{id:61,n:"_pipe",i:0,x:0,y:64,w:32,h:32,f:0},{id:60,n:"_pillar",i:0,x:32,y:64,w:32,h:32,f:0},{id:67,n:"_porthouse",i:0,x:64,y:64,w:32,h:32,f:0},{id:58,n:"_pickaxe",i:0,x:96,y:64,w:32,h:32,f:0},{id:27,n:"_explosion2",i:0,x:128,y:64,w:32,h:32,f:0},{id:26,n:"_explosion1",i:0,x:160,y:64,w:32,h:32,f:0},{id:25,n:"_explosion",i:0,x:192,y:64,w:32,h:32,f:0},{id:25,n:"_explosion",i:1,x:224,y:64,w:32,h:32,f:0},{id:25,n:"_explosion",i:2,x:256,y:64,w:32,h:32,f:0},{id:25,n:"_explosion",i:3,x:288,y:64,w:32,h:32,f:0},{id:24,n:"_exclamation",i:0,x:320,y:64,w:32,h:32,f:0},{id:23,n:"_drillbroken",i:0,x:352,y:64,w:32,h:32,f:0},{id:22,n:"_drill",i:0,x:384,y:64,w:32,h:32,f:0},{id:59,n:"_pickaxeman",i:0,x:416,y:64,w:32,h:32,f:0},{id:20,n:"_deepwater",i:0,x:448,y:64,w:32,h:32,f:0},{id:19,n:"_cursor",i:0,x:480,y:64,w:32,h:32,f:0},{id:18,n:"_crystal2",i:0,x:512,y:64,w:32,h:32,f:0},{id:17,n:"_crystal",i:0,x:544,y:64,w:32,h:32,f:0},{id:16,n:"_crane",i:0,x:576,y:64,w:32,h:32,f:0},{id:28,n:"_farm",i:0,x:608,y:64,w:32,h:32,f:0},{id:15,n:"_cookiefactory",i:0,x:640,y:64,w:32,h:32,f:0},{id:13,n:"_coal",i:0,x:672,y:64,w:32,h:32,f:0},{id:11,n:"_cemetary",i:0,x:704,y:64,w:32,h:32,f:0},{id:10,n:"_cave_floor",i:0,x:736,y:64,w:32,h:32,f:0},{id:9,n:"_cactus",i:0,x:768,y:64,w:32,h:32,f:0},{id:8,n:"_bush_on",i:0,x:800,y:64,w:32,h:32,f:0},{id:7,n:"_bush_off",i:0,x:832,y:64,w:32,h:32,f:0},{id:6,n:"_bridge_fix",i:0,x:864,y:64,w:32,h:32,f:0},{id:5,n:"_bridge_broken",i:0,x:896,y:64,w:32,h:32,f:0},{id:4,n:"_boulder",i:0,x:928,y:64,w:32,h:32,f:0},{id:3,n:"_blocktable",i:0,x:960,y:64,w:32,h:32,f:0},{id:2,n:"_block",i:0,x:992,y:64,w:32,h:32,f:0},{id:1,n:"_blacker",i:0,x:1024,y:64,w:32,h:32,f:0},{id:14,n:"_construction",i:0,x:1056,y:64,w:32,h:32,f:0},{id:29,n:"_farmbroken",i:0,x:1088,y:64,w:32,h:32,f:0},{id:21,n:"_downgrade",i:0,x:1120,y:64,w:32,h:32,f:0},{id:31,n:"_fish",i:0,x:1152,y:64,w:32,h:32,f:0},{id:57,n:"_person",i:0,x:1184,y:64,w:32,h:32,f:0},{id:56,n:"_path",i:0,x:1216,y:64,w:32,h:32,f:0},{id:55,n:"_particle_1",i:0,x:1248,y:64,w:32,h:32,f:0},{id:54,n:"_oldwoman",i:0,x:1280,y:64,w:32,h:32,f:0},{id:53,n:"_no_connection",i:0,x:1312,y:64,w:32,h:32,f:0},{id:30,n:"_fence",i:0,x:1344,y:64,w:32,h:32,f:0},{id:51,n:"_mountainholeblocked",i:0,x:1376,y:64,w:32,h:32,f:0},{id:50,n:"_mountainhole",i:0,x:1408,y:64,w:32,h:32,f:0},{id:49,n:"_mountain",i:0,x:1440,y:64,w:32,h:32,f:0},{id:48,n:"_man_3",i:0,x:1472,y:64,w:32,h:32,f:0},{id:47,n:"_man_2",i:0,x:1504,y:64,w:32,h:32,f:0},{id:46,n:"_man_1",i:0,x:1536,y:64,w:32,h:32,f:0},{id:45,n:"_magicbarrier",i:0,x:1568,y:64,w:32,h:32,f:0},{id:45,n:"_magicbarrier",i:1,x:1600,y:64,w:32,h:32,f:0},{id:52,n:"_mountainpath",i:0,x:1632,y:64,w:32,h:32,f:0},{id:43,n:"_lava_stream",i:0,x:1664,y:64,w:32,h:32,f:0},{id:32,n:"_fisherman",i:0,x:1696,y:64,w:32,h:32,f:0},{id:44,n:"_l_floor",i:0,x:1728,y:64,w:32,h:32,f:0},{id:33,n:"_flower",i:0,x:1760,y:64,w:32,h:32,f:0},{id:34,n:"_floweroff",i:0,x:1792,y:64,w:32,h:32,f:0},{id:35,n:"_grass",i:0,x:1824,y:64,w:32,h:32,f:0},{id:36,n:"_house",i:0,x:1856,y:64,w:32,h:32,f:0},{id:135,n:"Anim_smoke",i:0,x:1888,y:64,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:1,x:1920,y:64,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:10,x:1952,y:64,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:11,x:1984,y:64,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:12,x:2016,y:64,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:13,x:0,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:14,x:32,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:15,x:64,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:16,x:96,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:17,x:128,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:18,x:160,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:19,x:192,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:2,x:224,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:20,x:256,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:21,x:288,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:22,x:320,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:23,x:352,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:24,x:384,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:25,x:416,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:26,x:448,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:27,x:480,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:28,x:512,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:29,x:544,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:3,x:576,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:30,x:608,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:31,x:640,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:32,x:672,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:33,x:704,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:34,x:736,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:35,x:768,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:36,x:800,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:37,x:832,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:38,x:864,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:39,x:896,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:4,x:928,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:40,x:960,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:41,x:992,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:42,x:1024,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:43,x:1056,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:44,x:1088,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:45,x:1120,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:46,x:1152,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:47,x:1184,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:48,x:1216,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:49,x:1248,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:5,x:1280,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:50,x:1312,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:51,x:1344,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:52,x:1376,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:53,x:1408,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:54,x:1440,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:55,x:1472,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:56,x:1504,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:57,x:1536,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:58,x:1568,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:59,x:1600,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:6,x:1632,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:60,x:1664,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:61,x:1696,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:62,x:1728,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:63,x:1760,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:64,x:1792,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:65,x:1824,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:66,x:1856,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:67,x:1888,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:68,x:1920,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:69,x:1952,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:7,x:1984,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:70,x:2016,y:96,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:71,x:0,y:128,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:72,x:32,y:128,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:73,x:64,y:128,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:74,x:96,y:128,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:75,x:128,y:128,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:76,x:160,y:128,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:77,x:192,y:128,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:78,x:224,y:128,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:8,x:256,y:128,w:32,h:32,f:60},{id:135,n:"Anim_smoke",i:9,x:288,y:128,w:32,h:32,f:60},{id:38,n:"_iron",i:0,x:320,y:128,w:32,h:32,f:0},{id:39,n:"_ironore",i:0,x:352,y:128,w:32,h:32,f:0},{id:40,n:"_lady_a",i:0,x:384,y:128,w:32,h:32,f:0},{id:41,n:"_lava",i:0,x:416,y:128,w:32,h:32,f:0},{id:42,n:"_lavapath",i:0,x:448,y:128,w:32,h:32,f:0},{id:37,n:"_ice",i:0,x:480,y:128,w:32,h:32,f:0},{id:12,n:"_cloud2",i:0,x:512,y:128,w:64,h:64,f:0},{id:132,n:"map_map_9",i:0,x:576,y:128,w:64,h:64,f:0},{id:131,n:"map_map_8",i:0,x:640,y:128,w:64,h:64,f:0},{id:130,n:"map_map_7",i:0,x:704,y:128,w:64,h:64,f:0},{id:129,n:"map_map_6",i:0,x:768,y:128,w:64,h:64,f:0},{id:128,n:"map_map_5",i:0,x:832,y:128,w:64,h:64,f:0},{id:127,n:"map_map_4",i:0,x:896,y:128,w:64,h:64,f:0},{id:124,n:"map_map_12",i:0,x:960,y:128,w:64,h:64,f:0},{id:125,n:"map_map_2",i:0,x:1024,y:128,w:64,h:64,f:0},{id:123,n:"map_map_11",i:0,x:1088,y:128,w:64,h:64,f:0},{id:122,n:"map_map_10",i:0,x:1152,y:128,w:64,h:64,f:0},{id:121,n:"map_map_1",i:0,x:1216,y:128,w:64,h:64,f:0},{id:126,n:"map_map_3",i:0,x:1280,y:128,w:64,h:64,f:0},{id:120,n:"map_map_0",i:0,x:1344,y:128,w:64,h:64,f:0},{id:119,n:"large_redmist",i:0,x:0,y:192,w:800,h:463,f:0},{id:118,n:"large_cloud",i:0,x:800,y:192,w:800,h:463,f:0}];var playfabTitleId="7E797";function analyticsStartQuest(questId){var o=new Object();o.EventName="player_quest_start";o.Body=new Object();o.Body.QuestId=questId;PlayFabClientSDK.WritePlayerEvent(o,onPlayFabResponse);}
function analyticsFinishQuest(questId){var o=new Object();o.EventName="player_quest_completed";o.Body=new Object();o.Body.QuestId=questId;PlayFabClientSDK.WritePlayerEvent(o,onPlayFabResponse);}
function initAnalytics(){var accessToken=userUniqueID;PlayFab.settings.titleId=playfabTitleId;PlayFabClientSDK.LoginWithCustomID({CustomId:accessToken,CreateAccount:true,TitleId:PlayFab.settings.titleId,},onPlayFabResponse);}
function onPlayFabResponse(response,error){}